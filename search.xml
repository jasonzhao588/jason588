<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Flutter开源项目 - appFlowy 真的是 Notion 的替代品?!</title>
      <link href="/2022/03/01/Flutter%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE-appFlowy-%E7%9C%9F%E7%9A%84%E6%98%AF-Notion-%E7%9A%84%E6%9B%BF%E4%BB%A3%E5%93%81/"/>
      <url>/2022/03/01/Flutter%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE-appFlowy-%E7%9C%9F%E7%9A%84%E6%98%AF-Notion-%E7%9A%84%E6%9B%BF%E4%BB%A3%E5%93%81/</url>
      
        <content type="html"><![CDATA[<h2 id="git"><a href="#git" class="headerlink" title="git"></a>git</h2><p><a href="https://www.appflowy.io/">https://www.appflowy.io/</a></p><p><a href="https://github.com/AppFlowy-IO/appflowy">https://github.com/AppFlowy-IO/appflowy</a></p><p><img src="https://ducafecat.tech/2021/12/01/flutter-opensource/flutter-opensource-appflowy/2021-12-01-22-23-16.png" alt="img"></p><p><img src="https://ducafecat.tech/2021/12/01/flutter-opensource/flutter-opensource-appflowy/2021-12-01-22-23-59.png" alt="img"></p><blockquote><p>也就 1 周 star 9.8k，我以为他是刷的。</p></blockquote><h2 id="目标-amp-特色"><a href="#目标-amp-特色" class="headerlink" title="目标&amp;特色"></a>目标&amp;特色</h2><ul><li>目标替代 Notion</li><li>数据 100% 自己管理</li><li>开源方式提供，你可以自己改</li><li>多平台支持</li><li>原生体验，估计是用了 flutter 关系</li></ul><h2 id="编译运行"><a href="#编译运行" class="headerlink" title="编译运行"></a>编译运行</h2><ul><li><ol><li>git clone</li></ol></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/AppFlowy-IO/appflowy.git</span><br></pre></td></tr></table></figure><ul><li><ol><li>安装 rust</li></ol></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cd appflowy/frontend</span><br><span class="line"></span><br><span class="line">make install_rust</span><br><span class="line"></span><br><span class="line">source $HOME/.cargo/env</span><br><span class="line"></span><br><span class="line">make install_cargo_make</span><br><span class="line"></span><br><span class="line">cargo make install_targets</span><br></pre></td></tr></table></figure><ul><li><ol><li>切换 flutter dev</li></ol></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">flutter channel dev</span><br><span class="line"></span><br><span class="line">or</span><br><span class="line"></span><br><span class="line">fvm use dev</span><br><span class="line">fvm global dev</span><br></pre></td></tr></table></figure><ul><li><ol><li>flutter 启用 desktop</li></ol></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># for windows</span><br><span class="line">flutter config --enable-windows-desktop</span><br><span class="line"></span><br><span class="line"># for macos</span><br><span class="line">flutter config --enable-macos-desktop</span><br><span class="line"></span><br><span class="line"># for linux</span><br><span class="line">flutter config --enable-linux-desktop</span><br></pre></td></tr></table></figure><ul><li><ol><li>用 vscode 或者其它 idea 打开</li></ol></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">open appflowy/frontend</span><br></pre></td></tr></table></figure><p><img src="https://ducafecat.tech/2021/12/01/flutter-opensource/flutter-opensource-appflowy/2021-12-01-23-31-18.png" alt="img"></p><p><img src="https://ducafecat.tech/2021/12/01/flutter-opensource/flutter-opensource-appflowy/2021-12-01-22-30-35.png" alt="img"></p><h2 id="代码架构"><a href="#代码架构" class="headerlink" title="代码架构"></a>代码架构</h2><ul><li>技术选型<ul><li>flutter: 多端适配</li><li>rust: ffi 平台接口、服务端</li></ul></li><li>flutter 端 <code>frontend/app_flowy</code></li></ul><p><img src="https://ducafecat.tech/2021/12/01/flutter-opensource/flutter-opensource-appflowy/2021-12-01-22-41-01.png" alt="img"></p><ul><li>前端业务 rust 层 <code>frontend/rust-lib</code></li></ul><p><img src="https://ducafecat.tech/2021/12/01/flutter-opensource/flutter-opensource-appflowy/2021-12-01-22-43-09.png" alt="img"></p><ul><li>共享库 shared-lib <code>shared-lib</code></li></ul><p><img src="https://ducafecat.tech/2021/12/01/flutter-opensource/flutter-opensource-appflowy/2021-12-01-22-44-58.png" alt="img"></p><ul><li>后端 rust api <code>backend</code></li></ul><p><img src="https://ducafecat.tech/2021/12/01/flutter-opensource/flutter-opensource-appflowy/2021-12-01-22-45-48.png" alt="img"></p><h2 id="参阅技术说明-doc"><a href="#参阅技术说明-doc" class="headerlink" title="参阅技术说明 doc"></a>参阅技术说明 <code>doc</code></h2><ul><li>系统设计说明 <code>doc/APPFLOWY_SYSTEM_DESIGN.md</code></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">                        Frontend                                                     FLowySDK</span><br><span class="line">                                                             │                                              ┌─────────┐</span><br><span class="line">                                                             │                                          ┌7─▶│Handler A│</span><br><span class="line">                                                             │                                          │   └─────────┘</span><br><span class="line">                                                             │                             ┌─────────┐  │   ┌─────────┐</span><br><span class="line">┌──────┐    ┌────┐    ┌──────────────┐                       │                        ┌───▶│Module A │──┼──▶│Handler B│</span><br><span class="line">│Widget│─1─▶│Bloc│─2─▶│ Repository A │─3─┐                   │                        │    └─────────┘  │   └─────────┘</span><br><span class="line">└──────┘    └────┘    └──────────────┘   │                   │                        │                 │   ┌─────────┐</span><br><span class="line">                      ┌──────────────┐   │    ┌───────┐    ┌─┴──┐     ┌───────────┐   │    ┌─────────┐  └──▶│Handler C│</span><br><span class="line">                      │ Repository B │───┼───▶│ Event │─4─▶│FFI │─5──▶│Dispatcher │─6─┼───▶│Module B │      └─────────┘</span><br><span class="line">                      └──────────────┘   │    └───────┘    └─┬──┘     └───────────┘   │    └─────────┘</span><br><span class="line">                      ┌──────────────┐   │                   │                        │</span><br><span class="line">                      │ Repository C │───┘                   │                        │    ┌─────────┐</span><br><span class="line">                      └──────────────┘                       │                        └───▶│Module C │</span><br><span class="line">                                                             │                             └─────────┘</span><br><span class="line">                                                             │</span><br><span class="line">                                                             │</span><br></pre></td></tr></table></figure><p>Here are the event flow:</p><ol><li>User click on the <code>Widget</code>(The user interface) that invokes the <code>Bloc</code> actions</li><li><code>Bloc</code> calls the repositories to perform additional operations to handle the actions.</li><li><code>Repository</code> offers the functionalities by combining the event, defined in the <code>FlowySDK</code>.</li><li><code>Events</code> will be passed in the <code>FlowySDK</code> through the <a href="https://en.wikipedia.org/wiki/Foreign_function_interface">FFI</a> interface.</li><li><code>Dispatcher</code> parses the event and generates the specific action scheduled in the <code>FlowySDK</code> runtime.</li><li><code>Dispatcher</code> find the event handler declared by the modules.</li><li><code>Handler</code> consumes the event and generates the response. The response will be returned to the widget through the <code>FFI</code>.</li></ol><p>The event flow will be discussed in two parts: the frontend implemented in flutter and the FlowySDK implemented in Rust.</p><ul><li>linux 编译说明 <code>doc/BUILD_ON_LINUX.md</code></li><li>windows 编译说明 <code>doc/BUILD_ON_WINDOWS.md</code></li><li>贡献参与说明 <code>doc/CONTRIBUTING.md</code></li><li>DDD 设计说明 <code>doc/DOMAIN_DRIVEN_DESIGN.md</code></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">┌──────────────────────────────────────────────────┐         ─────────▶</span><br><span class="line">│                Presentation Layer                │──┐      Dependency</span><br><span class="line">└──────────────────────────────────────────────────┘  │</span><br><span class="line">                          │                           │</span><br><span class="line">                          ▼                           │</span><br><span class="line">┌──────────────────────────────────────────────────┐  │</span><br><span class="line">│                Application Layer                 │  │</span><br><span class="line">└──────────────────────────────────────────────────┘  │</span><br><span class="line">                          │                           │</span><br><span class="line">                          ▼                           │</span><br><span class="line">┌──────────────────────────────────────────────────┐  │</span><br><span class="line">│                   Domain Layer                   │◀─┘</span><br><span class="line">└──────────────────────────────────────────────────┘</span><br><span class="line">                          ▲</span><br><span class="line">                          │</span><br><span class="line">┌──────────────────────────────────────────────────┐</span><br><span class="line">│               Infrastructure Layer               │</span><br><span class="line">└──────────────────────────────────────────────────┘</span><br></pre></td></tr></table></figure><p><strong>Presentation Layer</strong>:</p><ul><li>Responsible for presenting information to the user and interpreting user commands.</li><li>Consists of Widgets and also the state of the Widgets.</li></ul><p><strong>Application Layer</strong>:</p><ul><li>Defines the jobs the software is supposed to do. (Shouldn’t find any UI code or network code)</li><li>Coordinates the application activity and delegates work to the next layer down.</li><li>It doesn’t contain any complex business logic but the basic validation on the user input before<br>passing to the other layer.</li></ul><p><strong>Domain Layer</strong>:</p><ul><li>Responsible for representing concepts of the business.</li><li>Manages the business state or delegated to the infrastructure layer.</li><li>Self contained and it doesn’t depend on any other layers. Domain should be well isolated from the<br>other layers.</li></ul><p><strong>Infrastructure Layer</strong>:</p><ul><li><p>Provides generic technical capabilities that support the higher layers. It deals with APIs, persistence and network, etc.</p></li><li><p>Implements the repository interface and hiding the complexity of the Domain layer.</p></li><li><p>编辑器 <code>doc/EDITOR.md</code></p></li><li><p>roadmap</p></li></ul><p><a href="https://trello.com/b/NCyXCXXh/appflowy-roadmap">https://trello.com/b/NCyXCXXh/appflowy-roadmap</a></p><h2 id="看看本地文件在哪里"><a href="#看看本地文件在哪里" class="headerlink" title="看看本地文件在哪里"></a>看看本地文件在哪里</h2><ul><li>找到 sqlite</li></ul><p><img src="https://ducafecat.tech/2021/12/01/flutter-opensource/flutter-opensource-appflowy/2021-12-01-22-58-59.png" alt="img"></p><ul><li>搜索本地</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">find ~ -iname &#x27;flowy-database.db&#x27;</span><br><span class="line"></span><br><span class="line">~/Library/Containers/com.appflowy.macos/Data/Documents/flowy/fd3ada7d-7653-4196-90e1-7de0019627bc/flowy-database.db</span><br></pre></td></tr></table></figure><h2 id="flutter-插件"><a href="#flutter-插件" class="headerlink" title="flutter 插件"></a>flutter 插件</h2><ul><li>flutter-quill</li></ul><p><a href="https://github.com/singerdmx/flutter-quill">https://github.com/singerdmx/flutter-quill</a></p><p>富文本编辑器</p><p><img src="https://ducafecat.tech/2021/12/01/flutter-opensource/flutter-opensource-appflowy/2021-12-01-23-27-48.png" alt="img"></p><ul><li>freezed</li></ul><p><a href="https://pub.flutter-io.cn/packages/freezed">https://pub.flutter-io.cn/packages/freezed</a></p><p>数据 model 生成器，支持注解方式</p><ul><li>flutter_colorpicker</li></ul><p><a href="https://pub.flutter-io.cn/packages/flutter_colorpicker">https://pub.flutter-io.cn/packages/flutter_colorpicker</a></p><p>颜色选取工具</p><p><img src="https://ducafecat.tech/2021/12/01/flutter-opensource/flutter-opensource-appflowy/2021-12-01-23-11-05.png" alt="img"></p><ul><li>styled_widget</li></ul><p><a href="https://pub.flutter-io.cn/packages/styled_widget">https://pub.flutter-io.cn/packages/styled_widget</a></p><p>简化小组件定义</p><p><img src="https://ducafecat.tech/2021/12/01/flutter-opensource/flutter-opensource-appflowy/2021-12-01-23-14-32.png" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Icon(OMIcons.home, color: Colors.white)</span><br><span class="line">  .padding(all: 10)</span><br><span class="line">  .decorated(color: Color(0xff7AC1E7), shape: BoxShape.circle)</span><br><span class="line">  .padding(all: 15)</span><br><span class="line">  .decorated(color: Color(0xffE8F2F7), shape: BoxShape.circle)</span><br><span class="line">  .padding(all: 20)</span><br><span class="line">  .card(</span><br><span class="line">    elevation: 10,</span><br><span class="line">    shape: RoundedRectangleBorder(</span><br><span class="line">      borderRadius: BorderRadius.circular(20),</span><br><span class="line">    ),</span><br><span class="line">  )</span><br><span class="line">  .alignment(Alignment.center)</span><br><span class="line">  .backgroundColor(Color(0xffEBECF1));</span><br></pre></td></tr></table></figure><ul><li>get_it</li></ul><p><a href="https://pub.flutter-io.cn/packages/get_it">https://pub.flutter-io.cn/packages/get_it</a></p><p>全局访问你的业务对象，你可以拆分业务和 UI</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">// 定义</span><br><span class="line"></span><br><span class="line">final getIt = GetIt.instance;</span><br><span class="line"></span><br><span class="line">void setup() &#123;</span><br><span class="line">  getIt.registerSingleton&lt;AppModel&gt;(AppModel());</span><br><span class="line"></span><br><span class="line">// Alternatively you could write it if you don&#x27;t like global variables</span><br><span class="line">  GetIt.I.registerSingleton&lt;AppModel&gt;(AppModel());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 使用</span><br><span class="line"></span><br><span class="line">MaterialButton(</span><br><span class="line">  child: Text(&quot;Update&quot;),</span><br><span class="line">  onPressed: getIt&lt;AppModel&gt;().update   // given that your AppModel has a method update</span><br><span class="line">),</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>看到人家的架构，感觉自己弱爆了，我还是先领域分层设计做做干净</li><li>flutter bloc , rust ffi web protobuf 感觉还是成熟的选择</li><li>如果持续更新的话，我也很想看看架构的演变</li><li>现阶段估计还是在测试架构设计，应该不会上很多功能</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Flutter GetX + Material Design 3 Theme 样式自定义</title>
      <link href="/2022/03/01/Flutter-GetX-Material-Design-3-Theme-%E6%A0%B7%E5%BC%8F%E8%87%AA%E5%AE%9A%E4%B9%89/"/>
      <url>/2022/03/01/Flutter-GetX-Material-Design-3-Theme-%E6%A0%B7%E5%BC%8F%E8%87%AA%E5%AE%9A%E4%B9%89/</url>
      
        <content type="html"><![CDATA[<p><img src="https://ducafecat.oss-cn-beijing.aliyuncs.com/podcast/tips-getx-material-design3.png" alt="tips-getx-material-design3"></p><p>tips-getx-material-design3</p><h2 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h2><ul><li>样式自定义</li></ul><p><img src="https://ducafecat.oss-cn-beijing.aliyuncs.com/podcast/20220225123657.png" alt="img"></p><ul><li>Material 样式调试工具</li></ul><p><img src="https://ducafecat.oss-cn-beijing.aliyuncs.com/podcast/20220225123720.png" alt="img"><br><img src="https://ducafecat.oss-cn-beijing.aliyuncs.com/podcast/20220225123759.png" alt="img"><br><img src="https://ducafecat.oss-cn-beijing.aliyuncs.com/podcast/20220225123818.png" alt="img"><br><img src="https://ducafecat.oss-cn-beijing.aliyuncs.com/podcast/20220225123837.png" alt="img"></p><h2 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h2><ul><li>了解 Material Design 设计样式表</li><li>Flutter 中自定义样式（全局、局部）<ul><li>颜色</li><li>字体</li><li>组件</li></ul></li></ul><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><ul><li>Flutter GetX 中定制你的样式<br><a href="https://github.com/ducafecat/flutter_develop_tips/tree/main/flutter_theme_custom_getx">https://github.com/ducafecat/flutter_develop_tips/tree/main/flutter_theme_custom_getx</a></li><li>调试你的样式<br><a href="https://github.com/ducafecat/flutter_develop_tips/tree/main/flutter_material_design3_theme_getx">https://github.com/ducafecat/flutter_develop_tips/tree/main/flutter_material_design3_theme_getx</a></li></ul><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li>Material Design 2<br><a href="https://material.io/">https://material.io</a></li><li>Material Design 3<br><a href="https://m3.material.io/">https://m3.material.io</a><br><a href="https://m3.material.io/styles/color/overview">https://m3.material.io/styles/color/overview</a><br><a href="https://m3.material.io/styles/typography/overview">https://m3.material.io/styles/typography/overview</a><br><a href="https://m3.material.io/foundations/design-tokens/overview">https://m3.material.io/foundations/design-tokens/overview</a></li><li>material 样式文件<br><a href="https://www.figma.com/community/file/1035203688168086460">https://www.figma.com/community/file/1035203688168086460</a></li><li>material 颜色样式生成器<br><a href="https://material-foundation.github.io/material-theme-builder">https://material-foundation.github.io/material-theme-builder</a></li></ul><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="了解-Material-样式表"><a href="#了解-Material-样式表" class="headerlink" title="了解 Material 样式表"></a>了解 Material 样式表</h3><ul><li>material 样式文件, figma 格式<br><a href="https://www.figma.com/community/file/1035203688168086460">https://www.figma.com/community/file/1035203688168086460</a></li></ul><blockquote><p>导入你的 figma</p></blockquote><ul><li>颜色、字体</li></ul><p><img src="https://ducafecat.oss-cn-beijing.aliyuncs.com/podcast/20220225102123.png" alt="figma颜色字体"></p><p>figma颜色字体</p><ul><li>组件</li></ul><p><img src="https://ducafecat.oss-cn-beijing.aliyuncs.com/podcast/20220225102230.png" alt="figma组件"></p><p>figma组件</p><h3 id="Flutter-中一步步定制你的样式"><a href="#Flutter-中一步步定制你的样式" class="headerlink" title="Flutter 中一步步定制你的样式"></a>Flutter 中一步步定制你的样式</h3><h4 id="第一步-生成-colorScheme，创建-ThemeData"><a href="#第一步-生成-colorScheme，创建-ThemeData" class="headerlink" title="第一步: 生成 colorScheme，创建 ThemeData"></a>第一步: 生成 colorScheme，创建 ThemeData</h4><ul><li>material-theme-builder 编辑器<br><a href="https://material-foundation.github.io/material-theme-builder/#/custom">https://material-foundation.github.io/material-theme-builder/#/custom</a></li></ul><blockquote><p>导出 dart 格式导入你的项目</p></blockquote><ul><li>lib/color_schemes.dart</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">import &#x27;package:flutter/material.dart&#x27;;</span><br><span class="line"></span><br><span class="line">const lightColorScheme = ColorScheme(</span><br><span class="line">  brightness: Brightness.light,</span><br><span class="line">  primary: Color(0xFF6750A4),</span><br><span class="line">  onPrimary: Color(0xFFFFFFFF),</span><br><span class="line">  primaryContainer: Color(0xFFEADDFF),</span><br><span class="line">  onPrimaryContainer: Color(0xFF21005D),</span><br><span class="line">  secondary: Color(0xFF625B71),</span><br><span class="line">  onSecondary: Color(0xFFFFFFFF),</span><br><span class="line">  secondaryContainer: Color(0xFFE8DEF8),</span><br><span class="line">  onSecondaryContainer: Color(0xFF1D192B),</span><br><span class="line">  tertiary: Color(0xFF7D5260),</span><br><span class="line">  onTertiary: Color(0xFFFFFFFF),</span><br><span class="line">  tertiaryContainer: Color(0xFFFFD8E4),</span><br><span class="line">  onTertiaryContainer: Color(0xFF31111D),</span><br><span class="line">  error: Color(0xFFB3261E),</span><br><span class="line">  errorContainer: Color(0xFFF9DEDC),</span><br><span class="line">  onError: Color(0xFFFFFFFF),</span><br><span class="line">  onErrorContainer: Color(0xFF410E0B),</span><br><span class="line">  background: Color(0xFFFFFBFE),</span><br><span class="line">  onBackground: Color(0xFF1C1B1F),</span><br><span class="line">  surface: Color(0xFFFFFBFE),</span><br><span class="line">  onSurface: Color(0xFF1C1B1F),</span><br><span class="line">  surfaceVariant: Color(0xFFE7E0EC),</span><br><span class="line">  onSurfaceVariant: Color(0xFF49454F),</span><br><span class="line">  outline: Color(0xFF79747E),</span><br><span class="line">  onInverseSurface: Color(0xFFF4EFF4),</span><br><span class="line">  inverseSurface: Color(0xFF313033),</span><br><span class="line">  inversePrimary: Color(0xFFD0BCFF),</span><br><span class="line">  shadow: Color(0xFF000000),</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">const darkColorScheme = ColorScheme(</span><br><span class="line">  brightness: Brightness.dark,</span><br><span class="line">  primary: Color(0xFFD0BCFF),</span><br><span class="line">  onPrimary: Color(0xFF381E72),</span><br><span class="line">  primaryContainer: Color(0xFF4F378B),</span><br><span class="line">  onPrimaryContainer: Color(0xFFEADDFF),</span><br><span class="line">  secondary: Color(0xFFCCC2DC),</span><br><span class="line">  onSecondary: Color(0xFF332D41),</span><br><span class="line">  secondaryContainer: Color(0xFF4A4458),</span><br><span class="line">  onSecondaryContainer: Color(0xFFE8DEF8),</span><br><span class="line">  tertiary: Color(0xFFEFB8C8),</span><br><span class="line">  onTertiary: Color(0xFF492532),</span><br><span class="line">  tertiaryContainer: Color(0xFF633B48),</span><br><span class="line">  onTertiaryContainer: Color(0xFFFFD8E4),</span><br><span class="line">  error: Color(0xFFF2B8B5),</span><br><span class="line">  errorContainer: Color(0xFF8C1D18),</span><br><span class="line">  onError: Color(0xFF601410),</span><br><span class="line">  onErrorContainer: Color(0xFFF9DEDC),</span><br><span class="line">  background: Color(0xFF1C1B1F),</span><br><span class="line">  onBackground: Color(0xFFE6E1E5),</span><br><span class="line">  surface: Color(0xFF1C1B1F),</span><br><span class="line">  onSurface: Color(0xFFE6E1E5),</span><br><span class="line">  surfaceVariant: Color(0xFF49454F),</span><br><span class="line">  onSurfaceVariant: Color(0xFFCAC4D0),</span><br><span class="line">  outline: Color(0xFF938F99),</span><br><span class="line">  onInverseSurface: Color(0xFF1C1B1F),</span><br><span class="line">  inverseSurface: Color(0xFFE6E1E5),</span><br><span class="line">  inversePrimary: Color(0xFF6750A4),</span><br><span class="line">  shadow: Color(0xFF000000),</span><br><span class="line">);</span><br></pre></td></tr></table></figure><blockquote><p>分别定义了 <code>ColorScheme</code> 类型的，<code>明亮</code> 和 <code>暗色</code> 两种色彩定义</p></blockquote><ul><li>lib/theme.dart</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">import &#x27;package:flutter/material.dart&#x27;;</span><br><span class="line"></span><br><span class="line">import &#x27;color_schemes.dart&#x27;;</span><br><span class="line"></span><br><span class="line">class AppTheme &#123;</span><br><span class="line">  static ThemeData light = ThemeData(</span><br><span class="line">    colorScheme: lightColorScheme,</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  static ThemeData dark = ThemeData(</span><br><span class="line">    colorScheme: darkColorScheme,</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>创建 <code>明亮</code>和<code>暗色</code>两种<code>ThemeData</code>样式对象<br>分别设置 <code>colorScheme</code> 属性为上面的 <code>lightColorScheme</code> <code>darkColorScheme</code> 色彩定义</p></blockquote><h4 id="第二步-切换-theme-效果"><a href="#第二步-切换-theme-效果" class="headerlink" title="第二步: 切换 theme 效果"></a>第二步: 切换 theme 效果</h4><ul><li>加入 <code>GetX</code> pub 包</li></ul><p><a href="https://pub.flutter-io.cn/packages/get">https://pub.flutter-io.cn/packages/get</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; flutter pub add get</span><br></pre></td></tr></table></figure><ul><li>新增 <code>lib/global.dart</code> 全局变量管理</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">import &#x27;package:get/get.dart&#x27;;</span><br><span class="line"></span><br><span class="line">import &#x27;theme.dart&#x27;;</span><br><span class="line"></span><br><span class="line">class GlobalService extends GetxService &#123;</span><br><span class="line">  static GlobalService get to =&gt; Get.find();</span><br><span class="line"></span><br><span class="line">  // 是否黑暗模式</span><br><span class="line">  final RxBool _isDarkModel = Get.isDarkMode.obs;</span><br><span class="line">  bool get isDarkModel =&gt; _isDarkModel.value;</span><br><span class="line"></span><br><span class="line">  // 切换模式</span><br><span class="line">  void switchThemeModel() &#123;</span><br><span class="line">    _isDarkModel.value = !_isDarkModel.value;</span><br><span class="line">    Get.changeTheme(</span><br><span class="line">      _isDarkModel.value == true ? AppTheme.dark : AppTheme.light,</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>修改 <code>lib/main.dart</code> main 函数</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">void main() &#123;</span><br><span class="line">  appInit();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">appInit() async &#123;</span><br><span class="line">  // 初始 fluuter 引擎</span><br><span class="line">  WidgetsFlutterBinding.ensureInitialized();</span><br><span class="line"></span><br><span class="line">  // 初始</span><br><span class="line">  Get.put&lt;GlobalService&gt;(GlobalService());</span><br><span class="line"></span><br><span class="line">  // 启动</span><br><span class="line">  runApp(const MyApp());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class MyApp extends StatelessWidget &#123;</span><br><span class="line">  const MyApp(&#123;Key? key&#125;) : super(key: key);</span><br><span class="line"></span><br><span class="line">  @override</span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    return GetMaterialApp(</span><br><span class="line">      title: &#x27;Flutter Demo&#x27;,</span><br><span class="line"></span><br><span class="line">      // 初始样式</span><br><span class="line">      theme:</span><br><span class="line">          GlobalService.to.isDarkModel == true ? AppTheme.dark : AppTheme.light,</span><br><span class="line"></span><br><span class="line">      // home 界面</span><br><span class="line">      home: const MyHomePage(title: &#x27;Flutter Demo Home Page&#x27;),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><code>ensureInitialized</code> 会先绑定 Flutter 引擎和原生端的接口，为后续的组件初始做准备</p></blockquote><ul><li>加入 <code>lib/main.dart</code> 切换按钮</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">floatingActionButton: Obx(() &#123;</span><br><span class="line">  return FloatingActionButton(</span><br><span class="line">    onPressed: () &#123;</span><br><span class="line">      GlobalService.to.switchThemeModel();</span><br><span class="line">    &#125;,</span><br><span class="line">    child: Icon(</span><br><span class="line">      GlobalService.to.isDarkModel == true</span><br><span class="line">          ? Icons.dark_mode</span><br><span class="line">          : Icons.light_mode,</span><br><span class="line">    ),</span><br><span class="line">  );</span><br><span class="line">&#125;),</span><br></pre></td></tr></table></figure><blockquote><p>使用 <code>Obx</code> 方式响应按钮切换</p></blockquote><h4 id="第三步-自定义主题色-MaterialColor"><a href="#第三步-自定义主题色-MaterialColor" class="headerlink" title="第三步: 自定义主题色 MaterialColor"></a>第三步: 自定义主题色 MaterialColor</h4><ul><li>新增 <code>lib/string_to_material_color.dart</code> 字符串转 <code>MaterialColor</code> 函数</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">/// 字符串转 Color 类型</span><br><span class="line">/// Color color = stringToColor(&quot;40c254&quot;);</span><br><span class="line">Color stringToColor(String source) &#123;</span><br><span class="line">  return Color(int.parse(source, radix: 16) | 0xFF000000);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/// 字符串转 MaterialColor</span><br><span class="line">/// MaterialColor materialColor = stringToMaterialColor(&quot;40c254&quot;);</span><br><span class="line">MaterialColor stringToMaterialColor(String source) &#123;</span><br><span class="line">  Color color = stringToColor(source);</span><br><span class="line"></span><br><span class="line">  List&lt;double&gt; strengths = &lt;double&gt;[.05];</span><br><span class="line">  Map&lt;int, Color&gt; swatch = &lt;int, Color&gt;&#123;&#125;;</span><br><span class="line">  final int r = color.red, g = color.green, b = color.blue;</span><br><span class="line"></span><br><span class="line">  for (int i = 1; i &lt; 10; i++) &#123;</span><br><span class="line">    strengths.add(0.1 * i);</span><br><span class="line">  &#125;</span><br><span class="line">  for (var strength in strengths) &#123;</span><br><span class="line">    final double ds = 0.5 - strength;</span><br><span class="line">    swatch[(strength * 1000).round()] = Color.fromRGBO(</span><br><span class="line">      r + ((ds &lt; 0 ? r : (255 - r)) * ds).round(),</span><br><span class="line">      g + ((ds &lt; 0 ? g : (255 - g)) * ds).round(),</span><br><span class="line">      b + ((ds &lt; 0 ? b : (255 - b)) * ds).round(),</span><br><span class="line">      1,</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">  return MaterialColor(color.value, swatch);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>选取颜色</li></ul><p><a href="https://www.color-hex.com/">https://www.color-hex.com/</a></p><ul><li>设置 <code>lib/theme.dart</code> <code>light</code> 对象的属性 <code>primarySwatch</code></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">class AppTheme &#123;</span><br><span class="line">  // 自定义主色</span><br><span class="line">  static MaterialColor myColor = stringToMaterialColor(&quot;008744&quot;);</span><br><span class="line"></span><br><span class="line">  static ThemeData light = ThemeData(</span><br><span class="line">    primarySwatch: myColor,</span><br><span class="line">  );</span><br></pre></td></tr></table></figure><h4 id="第四步-全局定义组件样式"><a href="#第四步-全局定义组件样式" class="headerlink" title="第四步: 全局定义组件样式"></a>第四步: 全局定义组件样式</h4><ul><li>修改 <code>lib/theme.dart</code> , <code>appBarTheme</code> 属性</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">class AppTheme &#123;</span><br><span class="line"></span><br><span class="line">  static ThemeData light = ThemeData(</span><br><span class="line">    colorScheme: lightColorScheme,</span><br><span class="line"></span><br><span class="line">    // 全局 - 自定义 AppBarTheme</span><br><span class="line">    appBarTheme: ThemeData.light().appBarTheme.copyWith(</span><br><span class="line">          backgroundColor: Colors.yellow,</span><br><span class="line">          titleTextStyle: ThemeData.light().textTheme.titleLarge?.copyWith(</span><br><span class="line">                color: Colors.black,</span><br><span class="line">                fontWeight: FontWeight.bold,</span><br><span class="line">                fontSize: 20,</span><br><span class="line">              ),</span><br><span class="line">        ),</span><br><span class="line">  );</span><br></pre></td></tr></table></figure><blockquote><p><code>copyWith</code> 方法将会把其它属性一起复制</p></blockquote><h4 id="第五步-局部定义组件样式"><a href="#第五步-局部定义组件样式" class="headerlink" title="第五步: 局部定义组件样式"></a>第五步: 局部定义组件样式</h4><ul><li>修改 <code>lib/main.dart</code>, <code>MyHomePage</code> 界面的 <code>build</code> 方法</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">// 通过 GetX 的 theme 属性，读取当前样式 `ThemeData`</span><br><span class="line">ThemeData theme = Get.theme;</span><br><span class="line"></span><br><span class="line">return Theme(</span><br><span class="line">  data: theme.copyWith(</span><br><span class="line">    appBarTheme: theme.appBarTheme.copyWith(</span><br><span class="line">      backgroundColor: theme.colorScheme.tertiary,</span><br><span class="line">    ),</span><br><span class="line">  ),</span><br><span class="line">  child: Scaffold(</span><br></pre></td></tr></table></figure><blockquote><p>用 <code>Theme</code> 包裹需要局部使用的组件, 设置 <code>data</code> 属性</p></blockquote><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>本文介绍了 Material Design 3 中的样式表，以及如何在 Flutter 中如何修改全局、局部的样式，MaterialCorlor 和 Color 的区别以及如何使用。</p><p>我们可以发现如果和设计师协调好 颜色、字体、组件交互的样式标准，然后再适配下 Material Design ，样式配置将会快很多，很多时候样式调整给客户的是一种新鲜感，比如节假日、特殊日子里色调改下就行。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>前端开发在Mac里装那些软件</title>
      <link href="/2022/01/29/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%9C%A8Mac%E9%87%8C%E8%A3%85%E9%82%A3%E4%BA%9B%E8%BD%AF%E4%BB%B6/"/>
      <url>/2022/01/29/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%9C%A8Mac%E9%87%8C%E8%A3%85%E9%82%A3%E4%BA%9B%E8%BD%AF%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p><img src="https://ducafecat.tech/2020/10/12/flutter-daily/macbook-pro-16-tools-2020/2020-10-12-14-22-43.png" alt="img"></p><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><p><a href="https://www.bilibili.com/video/BV1854y1R7LG/">https://www.bilibili.com/video/BV1854y1R7LG/</a></p><h2 id="系统"><a href="#系统" class="headerlink" title="系统"></a>系统</h2><h3 id="Homebrew"><a href="#Homebrew" class="headerlink" title="Homebrew"></a>Homebrew</h3><p>包管理工具，主要安装命令行工具</p><p><a href="https://brew.sh/index_zh-cn">https://brew.sh/index_zh-cn</a></p><h3 id="homebrew-cask"><a href="#homebrew-cask" class="headerlink" title="homebrew-cask"></a>homebrew-cask</h3><p>包管理扩展工具，主要安装 gui 工具</p><p><a href="https://github.com/Homebrew/homebrew-cask">https://github.com/Homebrew/homebrew-cask</a></p><h3 id="git"><a href="#git" class="headerlink" title="git"></a>git</h3><p>源码控制</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install git</span><br></pre></td></tr></table></figure><h3 id="iTerm2"><a href="#iTerm2" class="headerlink" title="iTerm2"></a>iTerm2</h3><p>shell 工具</p><p><a href="https://www.iterm2.com/">https://www.iterm2.com/</a></p><h3 id="powerline-font"><a href="#powerline-font" class="headerlink" title="powerline font"></a>powerline font</h3><p>字体</p><p><a href="https://github.com/powerline/fonts">https://github.com/powerline/fonts</a></p><h3 id="firacode-font"><a href="#firacode-font" class="headerlink" title="firacode font"></a>firacode font</h3><p>字体</p><p><a href="https://github.com/tonsky/FiraCode">https://github.com/tonsky/FiraCode</a></p><h3 id="zsh"><a href="#zsh" class="headerlink" title="zsh"></a>zsh</h3><p>shell 工具</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install zsh</span><br></pre></td></tr></table></figure><h3 id="oh-my-zsh"><a href="#oh-my-zsh" class="headerlink" title="oh-my-zsh"></a>oh-my-zsh</h3><p>zsh 集成工具</p><p><a href="https://ohmyz.sh/">https://ohmyz.sh/</a></p><p><a href="https://github.com/ohmyzsh/ohmyzsh/wiki/themes">https://github.com/ohmyzsh/ohmyzsh/wiki/themes</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sh -c &quot;$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;</span><br></pre></td></tr></table></figure><h3 id="autojump"><a href="#autojump" class="headerlink" title="autojump"></a>autojump</h3><p>zsh 插件 快速导航目录</p><p><a href="https://github.com/wting/autojump">https://github.com/wting/autojump</a></p><h3 id="zsh-autosuggestions"><a href="#zsh-autosuggestions" class="headerlink" title="zsh-autosuggestions"></a>zsh-autosuggestions</h3><p>zsh 插件 快速提示历史输入</p><p><a href="https://github.com/zsh-users/zsh-autosuggestions">https://github.com/zsh-users/zsh-autosuggestions</a></p><h3 id="zsh-syntax-highlighting"><a href="#zsh-syntax-highlighting" class="headerlink" title="zsh-syntax-highlighting"></a>zsh-syntax-highlighting</h3><p>zsh 插件 美化显示</p><p><a href="https://github.com/zsh-users/zsh-syntax-highlighting">https://github.com/zsh-users/zsh-syntax-highlighting</a></p><h3 id="node-amp-nvm"><a href="#node-amp-nvm" class="headerlink" title="node &amp; nvm"></a>node &amp; nvm</h3><p>node 版本管理</p><p><a href="https://github.com/nvm-sh/nvm">https://github.com/nvm-sh/nvm</a></p><h3 id="whistle"><a href="#whistle" class="headerlink" title="whistle"></a>whistle</h3><p>抓包管理</p><p><a href="https://github.com/avwo/whistle">https://github.com/avwo/whistle</a></p><h3 id="Charles"><a href="#Charles" class="headerlink" title="Charles"></a>Charles</h3><p>抓包管理 俗称水瓶</p><p><a href="https://www.charlesproxy.com/">https://www.charlesproxy.com/</a></p><h3 id="Bartender-3"><a href="#Bartender-3" class="headerlink" title="Bartender 3"></a>Bartender 3</h3><p>顶部菜单项隐藏</p><p><a href="https://www.macbartender.com/">https://www.macbartender.com/</a></p><h3 id="CleanMyMac-X"><a href="#CleanMyMac-X" class="headerlink" title="CleanMyMac X"></a>CleanMyMac X</h3><p>清理电脑</p><p><a href="https://macpaw.com/cleanmymac">https://macpaw.com/cleanmymac</a></p><h3 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h3><p>容器管理</p><p><a href="https://www.docker.com/">https://www.docker.com/</a></p><h3 id="ClashX"><a href="#ClashX" class="headerlink" title="ClashX"></a>ClashX</h3><p>科学上网</p><p><a href="https://github.com/yichengchen/clashX/">https://github.com/yichengchen/clashX/</a></p><h3 id="V2rayU"><a href="#V2rayU" class="headerlink" title="V2rayU"></a>V2rayU</h3><p>科学上网</p><p><a href="https://github.com/yanue/V2rayU/releases">https://github.com/yanue/V2rayU/releases</a></p><h3 id="Keka"><a href="#Keka" class="headerlink" title="Keka"></a>Keka</h3><p>压缩解压</p><p><a href="https://www.keka.io/en/">https://www.keka.io/en/</a></p><h3 id="Mounty"><a href="#Mounty" class="headerlink" title="Mounty"></a>Mounty</h3><p>ntfs 磁盘读写</p><p><a href="https://mounty.app/">https://mounty.app/</a></p><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><h3 id="chrome"><a href="#chrome" class="headerlink" title="chrome"></a>chrome</h3><p>浏览器</p><p><a href="https://www.google.cn/chrome/">https://www.google.cn/chrome/</a></p><h3 id="edge"><a href="#edge" class="headerlink" title="edge"></a>edge</h3><p>浏览器</p><p><a href="https://www.microsoft.com/en-us/edge">https://www.microsoft.com/en-us/edge</a></p><h3 id="firefox"><a href="#firefox" class="headerlink" title="firefox"></a>firefox</h3><p>浏览器</p><p><a href="http://www.firefox.com.cn/">http://www.firefox.com.cn/</a></p><h3 id="sourcetree"><a href="#sourcetree" class="headerlink" title="sourcetree"></a>sourcetree</h3><p>git 管理</p><p><a href="https://www.sourcetreeapp.com/">https://www.sourcetreeapp.com/</a></p><h3 id="CheatSheet"><a href="#CheatSheet" class="headerlink" title="CheatSheet"></a>CheatSheet</h3><p>快捷键提示</p><p><a href="https://www.mediaatelier.com/CheatSheet/">https://www.mediaatelier.com/CheatSheet/</a></p><h3 id="alfred"><a href="#alfred" class="headerlink" title="alfred"></a>alfred</h3><p>阿芙管家</p><p><a href="https://www.alfredapp.com/">https://www.alfredapp.com/</a></p><h3 id="snipaste"><a href="#snipaste" class="headerlink" title="snipaste"></a>snipaste</h3><p>截图</p><p><a href="https://docs.snipaste.com/zh-cn/">https://docs.snipaste.com/zh-cn/</a></p><h3 id="iShot"><a href="#iShot" class="headerlink" title="iShot"></a>iShot</h3><p>截图</p><p><a href="https://apps.apple.com/cn/app/ishot-%E6%88%AA%E5%9B%BE-%E5%BD%95%E5%B1%8F-2020%E5%85%A8%E6%96%B0%E9%AB%98%E5%BA%A6/id1485844094?mt=12">https://apps.apple.com/cn/app/ishot-%E6%88%AA%E5%9B%BE-%E5%BD%95%E5%B1%8F-2020%E5%85%A8%E6%96%B0%E9%AB%98%E5%BA%A6/id1485844094?mt=12</a></p><h3 id="licecap"><a href="#licecap" class="headerlink" title="licecap"></a>licecap</h3><p>gif 录制</p><p><a href="https://www.cockos.com/licecap/">https://www.cockos.com/licecap/</a></p><h3 id="有道笔记"><a href="#有道笔记" class="headerlink" title="有道笔记"></a>有道笔记</h3><p>知识管理</p><p><a href="http://note.youdao.com/">http://note.youdao.com/</a></p><h3 id="notion"><a href="#notion" class="headerlink" title="notion"></a>notion</h3><p>知识管理</p><p><a href="https://www.notion.so/">https://www.notion.so/</a></p><h3 id="trello"><a href="#trello" class="headerlink" title="trello"></a>trello</h3><p>知识管理</p><p><a href="https://trello.com/">https://trello.com/</a></p><h3 id="typora"><a href="#typora" class="headerlink" title="typora"></a>typora</h3><p>markdown 写作</p><p><a href="https://typora.io/">https://typora.io/</a></p><h3 id="语雀"><a href="#语雀" class="headerlink" title="语雀"></a>语雀</h3><p>知识管理</p><p><a href="https://www.yuque.com/">https://www.yuque.com/</a></p><h3 id="印象笔记"><a href="#印象笔记" class="headerlink" title="印象笔记"></a>印象笔记</h3><p>知识管理</p><p><a href="https://yinxiang.com/">https://yinxiang.com/</a></p><h3 id="securecrt"><a href="#securecrt" class="headerlink" title="securecrt"></a>securecrt</h3><p>ssh 客户端</p><p><a href="https://www.vandyke.com/products/securecrt/">https://www.vandyke.com/products/securecrt/</a></p><h3 id="finalshell"><a href="#finalshell" class="headerlink" title="finalshell"></a>finalshell</h3><p>ssh 客户端</p><p><a href="https://www.hostbuf.com/">https://www.hostbuf.com/</a></p><h3 id="网页-MuMu"><a href="#网页-MuMu" class="headerlink" title="网页 MuMu"></a>网页 MuMu</h3><p>android 模拟器</p><p><a href="https://mumu.163.com/mac/index.html">https://mumu.163.com/mac/index.html</a></p><h3 id="百度网盘"><a href="#百度网盘" class="headerlink" title="百度网盘"></a>百度网盘</h3><p>网盘</p><p><a href="https://pan.baidu.com/">https://pan.baidu.com/</a></p><h3 id="Downie-4"><a href="#Downie-4" class="headerlink" title="Downie 4"></a>Downie 4</h3><p>下载油管视频</p><p><a href="https://software.charliemonroe.net/downie/">https://software.charliemonroe.net/downie/</a></p><h3 id="EasyRes"><a href="#EasyRes" class="headerlink" title="EasyRes"></a>EasyRes</h3><p>屏幕分辨率切换</p><p><a href="http://easyresapp.com/">http://easyresapp.com/</a></p><h3 id="Free-Download-Manager"><a href="#Free-Download-Manager" class="headerlink" title="Free Download Manager"></a>Free Download Manager</h3><p>下载工具</p><p><a href="https://www.freedownloadmanager.org/zh/">https://www.freedownloadmanager.org/zh/</a></p><h3 id="iStat-Menus"><a href="#iStat-Menus" class="headerlink" title="iStat Menus"></a>iStat Menus</h3><p>状态管理</p><p><a href="https://setapp.com/">https://setapp.com/</a></p><h3 id="pap-er"><a href="#pap-er" class="headerlink" title="pap.er"></a>pap.er</h3><p>壁纸管理</p><p><a href="https://paper.meiyuan.in/">https://paper.meiyuan.in/</a></p><h3 id="Parallels-Desktop"><a href="#Parallels-Desktop" class="headerlink" title="Parallels Desktop"></a>Parallels Desktop</h3><p>虚拟机管理 工作用</p><p><a href="https://www.parallels.com/">https://www.parallels.com/</a></p><h3 id="virtualbox"><a href="#virtualbox" class="headerlink" title="virtualbox"></a>virtualbox</h3><p>虚拟机管理 试验用</p><p><a href="https://www.virtualbox.org/">https://www.virtualbox.org/</a></p><h3 id="vmware"><a href="#vmware" class="headerlink" title="vmware"></a>vmware</h3><p>虚拟机管理 试验用</p><p><a href="https://www.vmware.com/hk.html">https://www.vmware.com/hk.html</a></p><h3 id="SwitchHosts"><a href="#SwitchHosts" class="headerlink" title="SwitchHosts!"></a>SwitchHosts!</h3><p>切换 host</p><p><a href="https://github.com/oldj/SwitchHosts">https://github.com/oldj/SwitchHosts</a></p><h3 id="Reeder-4"><a href="#Reeder-4" class="headerlink" title="Reeder 4"></a>Reeder 4</h3><p>rss 阅读器</p><p><a href="https://apps.apple.com/cn/app/reeder-4/id1449412482?mt=12">https://apps.apple.com/cn/app/reeder-4/id1449412482?mt=12</a></p><h3 id="ScreenFlow"><a href="#ScreenFlow" class="headerlink" title="ScreenFlow"></a>ScreenFlow</h3><p>录视频</p><p><a href="https://www.telestream.net/screenflow/overview.htm">https://www.telestream.net/screenflow/overview.htm</a></p><h3 id="TeamViewer"><a href="#TeamViewer" class="headerlink" title="TeamViewer"></a>TeamViewer</h3><p>远程写作</p><p><a href="https://www.teamviewer.cn/">https://www.teamviewer.cn</a></p><h3 id="draw-io"><a href="#draw-io" class="headerlink" title="draw.io"></a>draw.io</h3><p>画图</p><p><a href="https://www.diagrams.net/">https://www.diagrams.net/</a></p><h3 id="Foxmail"><a href="#Foxmail" class="headerlink" title="Foxmail"></a>Foxmail</h3><p>轻巧邮件管理</p><p><a href="https://www.foxmail.com/">https://www.foxmail.com/</a></p><h3 id="Microsoft-To-Do"><a href="#Microsoft-To-Do" class="headerlink" title="Microsoft To Do"></a>Microsoft To Do</h3><p>任务管理</p><p><a href="https://todo.microsoft.com/">https://todo.microsoft.com/</a></p><h3 id="Microsoft-Remote-Desktop"><a href="#Microsoft-Remote-Desktop" class="headerlink" title="Microsoft Remote Desktop"></a>Microsoft Remote Desktop</h3><p>远程 windows</p><p><a href="https://www.microsoft.com/en-us/download/details.aspx?id=50042">https://www.microsoft.com/en-us/download/details.aspx?id=50042</a></p><h3 id="WPS-Office"><a href="#WPS-Office" class="headerlink" title="WPS Office"></a>WPS Office</h3><p>word ppt excel</p><p><a href="https://www.wps.cn/">https://www.wps.cn/</a></p><h3 id="通讯"><a href="#通讯" class="headerlink" title="通讯"></a>通讯</h3><p>QQ、微信、企业微信、Telegram</p><h3 id="央视影音"><a href="#央视影音" class="headerlink" title="央视影音"></a>央视影音</h3><p>看电视 比赛 直播</p><p><a href="https://app.cctv.com/appkhdxz/ysyymac/">https://app.cctv.com/appkhdxz/ysyymac/</a></p><h3 id="IINA"><a href="#IINA" class="headerlink" title="IINA"></a>IINA</h3><p>播放器</p><p><a href="https://iina.io/">https://iina.io/</a></p><h3 id="solarized-theme"><a href="#solarized-theme" class="headerlink" title="solarized theme"></a>solarized theme</h3><p>多端样式配色</p><p><a href="https://ethanschoonover.com/solarized/">https://ethanschoonover.com/solarized/</a></p><h2 id="开发"><a href="#开发" class="headerlink" title="开发"></a>开发</h2><h3 id="sublime"><a href="#sublime" class="headerlink" title="sublime"></a>sublime</h3><p><a href="http://www.sublimetext.com/">http://www.sublimetext.com/</a></p><h3 id="vscode"><a href="#vscode" class="headerlink" title="vscode"></a>vscode</h3><p><a href="https://code.visualstudio.com/">https://code.visualstudio.com/</a></p><h3 id="xcode"><a href="#xcode" class="headerlink" title="xcode"></a>xcode</h3><p><a href="https://developer.apple.com/xcode/">https://developer.apple.com/xcode/</a></p><h3 id="android-stuido"><a href="#android-stuido" class="headerlink" title="android stuido"></a>android stuido</h3><p><a href="https://developer.android.com/studio">https://developer.android.com/studio</a></p><h3 id="HBuilderX"><a href="#HBuilderX" class="headerlink" title="HBuilderX"></a>HBuilderX</h3><p><a href="https://www.dcloud.io/hbuilderx.html">https://www.dcloud.io/hbuilderx.html</a></p><h3 id="微信开发者工具"><a href="#微信开发者工具" class="headerlink" title="微信开发者工具"></a>微信开发者工具</h3><p><a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/devtools.html">https://developers.weixin.qq.com/miniprogram/dev/devtools/devtools.html</a></p><h3 id="TinyPNG4Mac"><a href="#TinyPNG4Mac" class="headerlink" title="TinyPNG4Mac"></a>TinyPNG4Mac</h3><p>图片压缩</p><p><a href="https://github.com/kyleduo/TinyPNG4Mac/blob/master/README_ZH.md">https://github.com/kyleduo/TinyPNG4Mac/blob/master/README_ZH.md</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew cask install tinypng4mac</span><br></pre></td></tr></table></figure><h3 id="dash"><a href="#dash" class="headerlink" title="dash"></a>dash</h3><p>离线文档工具</p><p><a href="https://kapeli.com/dash">https://kapeli.com/dash</a></p><h3 id="postman"><a href="#postman" class="headerlink" title="postman"></a>postman</h3><p>api 调试</p><p><a href="https://www.postman.com/">https://www.postman.com/</a></p><h3 id="adobe-ps-xd"><a href="#adobe-ps-xd" class="headerlink" title="adobe ps xd"></a>adobe ps xd</h3><p>设计</p><p><a href="https://www.adobe.com/cn/">https://www.adobe.com/cn/</a></p><h3 id="sketch"><a href="#sketch" class="headerlink" title="sketch"></a>sketch</h3><p>设计</p><p><a href="https://www.sketch.com/">https://www.sketch.com/</a></p><h3 id="axure"><a href="#axure" class="headerlink" title="axure"></a>axure</h3><p>原型设计</p><p><a href="https://www.axure.com/">https://www.axure.com/</a></p><h3 id="pxcook"><a href="#pxcook" class="headerlink" title="pxcook"></a>pxcook</h3><p>标注工具</p><p><a href="https://www.fancynode.com.cn/pxcook">https://www.fancynode.com.cn/pxcook</a></p><h3 id="mindnode"><a href="#mindnode" class="headerlink" title="mindnode"></a>mindnode</h3><p>思维脑图</p><p><a href="https://apps.apple.com/cn/app/mindnode-mind-map/id1289197285?mt=12">https://apps.apple.com/cn/app/mindnode-mind-map/id1289197285?mt=12</a></p><h3 id="diffmerge"><a href="#diffmerge" class="headerlink" title="diffmerge"></a>diffmerge</h3><p>文件比较</p><p><a href="http://sourcegear.com/diffmerge">http://sourcegear.com/diffmerge</a></p><h3 id="RedisDesktopManager"><a href="#RedisDesktopManager" class="headerlink" title="RedisDesktopManager"></a>RedisDesktopManager</h3><p>redis 管理客户端</p><p><a href="https://github.com/uglide/RedisDesktopManager">https://github.com/uglide/RedisDesktopManager</a></p><h3 id="DBeaver"><a href="#DBeaver" class="headerlink" title="DBeaver"></a>DBeaver</h3><p>多数据库 客户端</p><p><a href="https://dbeaver.io/">https://dbeaver.io/</a></p><h3 id="Navicat-Premium"><a href="#Navicat-Premium" class="headerlink" title="Navicat Premium"></a>Navicat Premium</h3><p>mysql 客户端</p><p><a href="http://www.navicat.com.cn/store/navicat-premium">http://www.navicat.com.cn/store/navicat-premium</a></p><h3 id="pdman"><a href="#pdman" class="headerlink" title="pdman"></a>pdman</h3><p>关系数据库设计工具</p><p><a href="https://gitee.com/robergroup/pdman">https://gitee.com/robergroup/pdman</a></p><h3 id="GoLand"><a href="#GoLand" class="headerlink" title="GoLand"></a>GoLand</h3><p><a href="https://www.jetbrains.com/go/">https://www.jetbrains.com/go/</a></p><h3 id="IDEA"><a href="#IDEA" class="headerlink" title="IDEA"></a>IDEA</h3><p><a href="https://www.jetbrains.com/">https://www.jetbrains.com/</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>35个好用的Flutter插件</title>
      <link href="/2022/01/28/%E5%B8%B8%E7%94%A8%E7%9A%84Flutter%20Widgets%E5%92%8C%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
      <url>/2022/01/28/%E5%B8%B8%E7%94%A8%E7%9A%84Flutter%20Widgets%E5%92%8C%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><p><a href="https://www.youtube.com/watch?v=M9J-JJOuyE0">Top 35 Flutter Widgets</a></p><p><a href="https://www.youtube.com/watch?v=Kq5ZsygfWAc">30 Flutter Tips and Tricks (2)</a></p><p><a href="https://www.youtube.com/watch?v=hDVZykwl13I">69 Flutter Tips and Tricks (3)</a></p><h2 id="stepper-0-0-2"><a href="#stepper-0-0-2" class="headerlink" title="stepper: ^0.0.2"></a>stepper: ^0.0.2</h2><p>步骤跳转</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> main() =&gt; runApp(MyApp());</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="comment">// This widget is the root of your application.</span></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">      title: <span class="string">&#x27;Flutter Demo&#x27;</span>,</span><br><span class="line">      theme: ThemeData(</span><br><span class="line">        primarySwatch: Colors.blue,</span><br><span class="line">      ),</span><br><span class="line">      home: MyHomePage(</span><br><span class="line">        title: <span class="string">&quot;Demo App&quot;</span>,</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyHomePage</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span> </span>&#123;</span><br><span class="line">  MyHomePage(&#123;Key key, <span class="keyword">this</span>.title&#125;) : <span class="keyword">super</span>(key: key);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String</span> title;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  _MyHomePageState createState() =&gt; _MyHomePageState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_MyHomePageState</span> <span class="keyword">extends</span> <span class="title">State</span>&lt;<span class="title">MyHomePage</span>&gt; </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> Scaffold(</span><br><span class="line">      appBar: AppBar(</span><br><span class="line">        title: Text(widget.title),</span><br><span class="line">      ),</span><br><span class="line">      body: Padding(</span><br><span class="line">        padding: <span class="keyword">const</span> EdgeInsets.only(</span><br><span class="line">          left: <span class="number">16</span>,</span><br><span class="line">          right: <span class="number">16</span>,</span><br><span class="line">        ),</span><br><span class="line">        child: HorizontalStepper(</span><br><span class="line">            steps: [</span><br><span class="line">              HorizontalStep(</span><br><span class="line">                title: <span class="string">&quot;Step 1&quot;</span>,</span><br><span class="line">                widget: Center(</span><br><span class="line">                  child: Text(<span class="string">&quot;Step 1&quot;</span>),</span><br><span class="line">                ),</span><br><span class="line">                state: HorizontalStepState.SELECTED,</span><br><span class="line">                isValid: <span class="keyword">true</span>,</span><br><span class="line">              ),</span><br><span class="line">              HorizontalStep(</span><br><span class="line">                title: <span class="string">&quot;Step 2&quot;</span>,</span><br><span class="line">                widget: Center(</span><br><span class="line">                  child: Text(<span class="string">&quot;Step 2&quot;</span>),</span><br><span class="line">                ),</span><br><span class="line">                isValid: <span class="keyword">true</span>,</span><br><span class="line">              ),</span><br><span class="line">              HorizontalStep(</span><br><span class="line">                title: <span class="string">&quot;Step 3&quot;</span>,</span><br><span class="line">                widget: Center(</span><br><span class="line">                  child: Text(<span class="string">&quot;Step 3&quot;</span>),</span><br><span class="line">                ),</span><br><span class="line">                isValid: <span class="keyword">true</span>,</span><br><span class="line">              ),</span><br><span class="line">              HorizontalStep(</span><br><span class="line">                title: <span class="string">&quot;Step 4&quot;</span>,</span><br><span class="line">                widget: Center(</span><br><span class="line">                  child: Text(<span class="string">&quot;Step 4&quot;</span>),</span><br><span class="line">                ),</span><br><span class="line">                isValid: <span class="keyword">true</span>,</span><br><span class="line">              )</span><br><span class="line">            ],</span><br><span class="line">            selectedColor: <span class="keyword">const</span> Color(<span class="number">0xFF4FE2C0</span>),</span><br><span class="line">            unSelectedColor: Colors.grey.shade400,</span><br><span class="line">            leftBtnColor: <span class="keyword">const</span> Color(<span class="number">0xffEA7F8B</span>),</span><br><span class="line">            rightBtnColor: <span class="keyword">const</span> Color(<span class="number">0xFF4FE2C0</span>),</span><br><span class="line">            selectedOuterCircleColor: <span class="keyword">const</span> Color(<span class="number">0xFF40A8F4</span>),</span><br><span class="line">            type: <span class="built_in">Type</span>.TOP,</span><br><span class="line">            circleRadius: <span class="number">30</span>,</span><br><span class="line">            onComplete: () &#123;</span><br><span class="line">              <span class="built_in">print</span>(<span class="string">&quot;completed&quot;</span>);</span><br><span class="line">            &#125;,</span><br><span class="line">            textStyle: TextStyle(</span><br><span class="line">              fontSize: <span class="number">14</span>,</span><br><span class="line">              fontWeight: FontWeight.bold,</span><br><span class="line">              decoration: <span class="keyword">null</span>,</span><br><span class="line">            )),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="FittedBox"><a href="#FittedBox" class="headerlink" title="FittedBox"></a>FittedBox</h2><p>一个可以让内部文字按比例缩放的Material的 Widget</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Container(</span><br><span class="line">width: <span class="number">300</span>,</span><br><span class="line">  height:<span class="number">100</span>,</span><br><span class="line">  child: FittedBox(</span><br><span class="line">  child: Text(<span class="string">&#x27;FittedBox&#x27;</span>,style: TextStyle(fontSize: <span class="number">100</span>,color:Colors.white))</span><br><span class="line">  ),</span><br><span class="line">  </span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="flutter-zoom-drawer-2-2-2-1"><a href="#flutter-zoom-drawer-2-2-2-1" class="headerlink" title="flutter_zoom_drawer: ^2.2.2+1"></a>flutter_zoom_drawer: ^2.2.2+1</h2><p>缩放式测栏</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">ZoomDrawer(</span><br><span class="line">      controller: ZoomDrawerController,</span><br><span class="line">      style: DrawerStyle.DefaultStyle,</span><br><span class="line">      menuScreen: MENU_SCREEN,</span><br><span class="line">      mainScreen: MAIN_SCREEN,</span><br><span class="line">      borderRadius: <span class="number">24.0</span>,</span><br><span class="line">      showShadow: <span class="keyword">true</span>,</span><br><span class="line">      angle: <span class="number">-12.0</span>,</span><br><span class="line">      backgroundColor: Colors.grey[<span class="number">300</span>],</span><br><span class="line">      slideWidth: MediaQuery.of(context).size.width*<span class="number">.65</span>,</span><br><span class="line">      openCurve: Curves.fastOutSlowIn,</span><br><span class="line">      closeCurve: Curves.bounceIn,</span><br><span class="line">    )</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Flutter 2.8有哪些变化</title>
      <link href="/2022/01/25/Flutter2.8%E6%96%B0%E5%8A%9F%E8%83%BD/"/>
      <url>/2022/01/25/Flutter2.8%E6%96%B0%E5%8A%9F%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<p><img src="http://r62hc9ndh.hb-bkt.clouddn.com/20220123192036.png"></p><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><p><a href="https://www.bilibili.com/video/bv1sR4y1x758">https://www.bilibili.com/video/bv1sR4y1x758</a></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://medium.com/flutter/whats-new-in-flutter-2-8-d085b763d181">https://medium.com/flutter/whats-new-in-flutter-2-8-d085b763d181</a></li><li><a href="https://medium.com/flutter/announcing-general-availability-for-the-google-mobile-ads-sdk-for-flutter-574e51ea6783">https://medium.com/flutter/announcing-general-availability-for-the-google-mobile-ads-sdk-for-flutter-574e51ea6783</a></li><li><a href="https://flutter.dev/monetization">https://flutter.dev/monetization</a></li><li><a href="https://api.flutter-io.cn/flutter/widgets/HtmlElementView-class.html">https://api.flutter-io.cn/flutter/widgets/HtmlElementView-class.html</a></li><li><a href="https://pub.flutter-io.cn/packages/webview_flutter">https://pub.flutter-io.cn/packages/webview_flutter</a></li></ul><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="性能提升"><a href="#性能提升" class="headerlink" title="性能提升"></a>性能提升</h3><ul><li>程序启动<ul><li>在低端 Android 设备上启动的时间减少了约 50%，高端设备上减少了约 10%</li><li>低端 Android 设备的初始帧出现间隔时间最多减少了约 300ms</li><li>在低端设备上的启动时间至少减少了 100ms</li></ul></li><li>应用内存<ul><li>减少了加载前约 40MB 的内存使用</li><li>后续的内存占用量进一步减少了约 10%</li></ul></li><li>性能分析<ul><li>性能跟踪中的新的 流事件让开发人员可以跟踪光栅缓存图片的生命周期</li></ul></li></ul><h3 id="Flutter-DevTools"><a href="#Flutter-DevTools" class="headerlink" title="Flutter DevTools"></a>Flutter DevTools</h3><p>新版的 DevTools 添加了一个新的「增强跟踪」功能， 用来帮助开发者诊断消耗较大的构建、布局和绘制操作引起的 UI 卡顿。</p><p><img src="https://ducafecat.tech/2021/12/14/flutter-daily/flutter-2-8-news/2021-12-14-07-12-52.png" alt="img"></p><p>启用任何一个追踪功能后，时间轴中将视情况展示 Widget 的构建、RenderObject 布局和 RenderObject 绘制的事件。</p><p><img src="https://ducafecat.tech/2021/12/14/flutter-daily/flutter-2-8-news/2021-12-14-07-13-07.png" alt="img"></p><p>此外，新版的 DevTools 增加了应用程序启动性能的分析支持。 该配置文件包含从 Dart VM 初始化到第一个 Flutter 帧渲染的 CPU 样本。 在你按下「Profile app start up」按钮并加载应用程序启动配置文件后， 你将看到为配置文件选择了「AppStartUp」用户标签。 你还可以通过在可用用户标签列表中选择此用户标签过滤器（如果存在）来加载应用程序启动配置文件。 选择此标签会显示你的应用程序启动的个人资料数据。</p><p><img src="https://ducafecat.tech/2021/12/14/flutter-daily/flutter-2-8-news/2021-12-14-07-13-30.png" alt="img"></p><h3 id="Web-平台的平台视图-PlatformView"><a href="#Web-平台的平台视图-PlatformView" class="headerlink" title="Web 平台的平台视图 (PlatformView)"></a>Web 平台的平台视图 (PlatformView)</h3><p>支持嵌入 <code>HtmlElementView</code> 对象，这真是太好了，我可以嵌入地图、iframe 有待确认。</p><p><a href="https://api.flutter-io.cn/flutter/widgets/HtmlElementView-class.html">https://api.flutter-io.cn/flutter/widgets/HtmlElementView-class.html</a></p><h3 id="适用于-Flutter-广告的-Google-广告"><a href="#适用于-Flutter-广告的-Google-广告" class="headerlink" title="适用于 Flutter 广告的 Google 广告"></a>适用于 Flutter 广告的 Google 广告</h3><p>Google Mobile SDK for Flutter 已于 11 月正式发布</p><p><a href="https://medium.com/flutter/announcing-general-availability-for-the-google-mobile-ads-sdk-for-flutter-574e51ea6783">https://medium.com/flutter/announcing-general-availability-for-the-google-mobile-ads-sdk-for-flutter-574e51ea6783</a></p><p><a href="https://flutter.dev/monetization">https://flutter.dev/monetization</a></p><p>这很重要哦，你可以收钱了。</p><h3 id="WebView-3-0"><a href="#WebView-3-0" class="headerlink" title="WebView 3.0"></a>WebView 3.0</h3><p><a href="https://pub.flutter-io.cn/packages/webview_flutter">https://pub.flutter-io.cn/packages/webview_flutter</a></p><ul><li>支持使用 POST 和 GET 来加载内容</li><li>加载文件或字符串内容为 HTML</li><li>支持透明背景</li><li>在加载内容前设置 Cookies</li></ul><h3 id="webview-flutter-web-插件支持-iframe-插入"><a href="#webview-flutter-web-插件支持-iframe-插入" class="headerlink" title="webview_flutter_web 插件支持 iframe 插入"></a>webview_flutter_web 插件支持 iframe 插入</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dependencies:</span><br><span class="line">  webview_flutter: ^3.0.0</span><br><span class="line">  webview_flutter_web: ^0.1.0 # 显式依赖未经认可的插件</span><br></pre></td></tr></table></figure><p><img src="https://ducafecat.tech/2021/12/14/flutter-daily/flutter-2-8-news/2021-12-14-07-22-19.png" alt="img"></p><h3 id="官方推荐的插件"><a href="#官方推荐的插件" class="headerlink" title="官方推荐的插件"></a>官方推荐的插件</h3><p><a href="https://pub.flutter-io.cn/flutter/favorites">https://pub.flutter-io.cn/flutter/favorites</a></p><ul><li>路由 新导航 v2<ul><li><a href="https://pub.flutter-io.cn/packages/beamer">https://pub.flutter-io.cn/packages/beamer</a></li><li><a href="https://pub.flutter-io.cn/packages/routemaster">https://pub.flutter-io.cn/packages/routemaster</a></li><li><a href="https://pub.flutter-io.cn/packages/go_router">https://pub.flutter-io.cn/packages/go_router</a></li></ul></li><li>sqlite 库 drift<ul><li><a href="https://pub.flutter-io.cn/packages/drift">https://pub.flutter-io.cn/packages/drift</a></li></ul></li><li>freezed model 代码生成器，支持注解<ul><li><a href="https://pub.flutter-io.cn/packages/freezed">https://pub.flutter-io.cn/packages/freezed</a></li></ul></li><li>dart_code_metrics 代码静态质量检查<ul><li><a href="https://pub.flutter-io.cn/packages/dart_code_metrics">https://pub.flutter-io.cn/packages/dart_code_metrics</a></li></ul></li><li>ui 相关库<ul><li><a href="https://pub.flutter-io.cn/packages/flex_color_scheme">https://pub.flutter-io.cn/packages/flex_color_scheme</a></li><li><a href="https://pub.flutter-io.cn/packages/flutter_svg">https://pub.flutter-io.cn/packages/flutter_svg</a></li><li><a href="https://pub.flutter-io.cn/packages/feedback">https://pub.flutter-io.cn/packages/feedback</a></li><li><a href="https://pub.flutter-io.cn/packages/toggle_switch">https://pub.flutter-io.cn/packages/toggle_switch</a></li><li><a href="https://pub.flutter-io.cn/packages/auto_size_text">https://pub.flutter-io.cn/packages/auto_size_text</a></li></ul></li></ul><h3 id="特定平台插件开发"><a href="#特定平台插件开发" class="headerlink" title="特定平台插件开发"></a>特定平台插件开发</h3><ul><li>通过 pubspec.yaml 配置<ul><li><a href="https://docs.flutter.dev/development/packages-and-plugins/developing-packages#plugin-platforms">https://docs.flutter.dev/development/packages-and-plugins/developing-packages#plugin-platforms</a></li></ul></li><li>用 dart 写插件<ul><li><a href="https://docs.flutter.dev/development/packages-and-plugins/developing-packages#dart-only-platform-implementations">https://docs.flutter.dev/development/packages-and-plugins/developing-packages#dart-only-platform-implementations</a></li></ul></li><li>Dart FFI 现在很成熟了<ul><li><a href="https://dart.dev/guides/libraries/c-interop">https://dart.dev/guides/libraries/c-interop</a></li></ul></li></ul><h3 id="Firebase"><a href="#Firebase" class="headerlink" title="Firebase"></a>Firebase</h3><p><a href="http://firebase.flutter.dev/">http://firebase.flutter.dev/</a></p><ul><li>所有 FlutterFire 插件都从 beta 阶段升级到稳定阶段</li><li>在 DartPad 中为几个 Firebase 服务提供新支持</li><li>新的库可以更容易地为身份验证和实时 Firestore 查询构建 UI</li><li>新的 Firestore 对象/文档映射用于 Flutter，可在 Alpha 中使用</li></ul><p><img src="https://ducafecat.tech/2021/12/14/flutter-daily/flutter-2-8-news/2021-12-14-08-51-20.png" alt="img"></p><p><img src="https://ducafecat.tech/2021/12/14/flutter-daily/flutter-2-8-news/2021-12-14-08-52-55.png" alt="img"></p><p><img src="https://ducafecat.tech/2021/12/14/flutter-daily/flutter-2-8-news/2021-12-14-08-53-07.png" alt="img"></p><p>UI 也升级了</p><p><img src="https://ducafecat.tech/2021/12/14/flutter-daily/flutter-2-8-news/2021-12-14-08-53-23.png" alt="img"></p><p><img src="https://ducafecat.tech/2021/12/14/flutter-daily/flutter-2-8-news/2021-12-14-08-53-35.png" alt="img"></p><p><img src="https://ducafecat.tech/2021/12/14/flutter-daily/flutter-2-8-news/2021-12-14-08-53-46.png" alt="img"></p><h3 id="桌面开发"><a href="#桌面开发" class="headerlink" title="桌面开发"></a>桌面开发</h3><ul><li>中文、韩文输入支持</li><li>Announcing FlutterFire for Desktop<br><a href="https://invertase.io/blog/announcing-flutterfire-desktop">https://invertase.io/blog/announcing-flutterfire-desktop</a></li></ul><h3 id="DartPad"><a href="#DartPad" class="headerlink" title="DartPad"></a>DartPad</h3><ul><li>切换 flutter 版本</li><li>预载入很多包</li><li>方便的嵌入你的 gist 代码</li></ul><p><img src="https://ducafecat.tech/2021/12/14/flutter-daily/flutter-2-8-news/2021-12-14-08-56-24.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> 框架, Flutter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flutter, APP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最佳的 VS Code Flutter 开发插件</title>
      <link href="/2022/01/23/%E6%9C%80%E4%BD%B3%E7%9A%84-VS-Code-Flutter-%E5%BC%80%E5%8F%91%E6%8F%92%E4%BB%B6/"/>
      <url>/2022/01/23/%E6%9C%80%E4%BD%B3%E7%9A%84-VS-Code-Flutter-%E5%BC%80%E5%8F%91%E6%8F%92%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p><img src="http://r62hc9ndh.hb-bkt.clouddn.com/20220123032218.png"></p><h2 id="原文"><a href="#原文" class="headerlink" title="原文"></a>原文</h2><blockquote><p><a href="https://itnext.io/best-vs-code-extensions-for-flutter-adcc808c5204">https://itnext.io/best-vs-code-extensions-for-flutter-adcc808c5204</a></p></blockquote><h2 id="最佳-VS-Flutter-代码扩展"><a href="#最佳-VS-Flutter-代码扩展" class="headerlink" title="最佳 VS Flutter 代码扩展"></a>最佳 VS Flutter 代码扩展</h2><p>VS 代码是目前应用最广泛的 Flutter 集成开发环境之一。但是有许多方法可以通过使用 VS 代码的扩展来提高工作效率。</p><h2 id="Awesome-Flutter-Snippets"><a href="#Awesome-Flutter-Snippets" class="headerlink" title="Awesome Flutter Snippets"></a><a href="https://marketplace.visualstudio.com/items?itemName=Nash.awesome-flutter-snippets">Awesome Flutter Snippets</a></h2><p>Awesome Flutter Snippets 是一个常用 Flutter 类和方法的集合。它通过消除与创建小部件相关的大部分样板代码来提高开发速度。通过分别输入快捷键 <code>streamBldr</code> 和 <code>singleChildSV</code> ，可以创建诸如 <code>StreamBuilder</code> 和 <code>SingleChildScrollView</code> 之类的小部件。</p><p><img src="https://ducafecat.oss-cn-beijing.aliyuncs.com/podcast/07ff26c6493594d8b267accc3efc1ea02706e02290d57daf71b2a248f2e58b08.png" alt="img"></p><h2 id="Pubspec-Assist"><a href="#Pubspec-Assist" class="headerlink" title="Pubspec Assist"></a><a href="https://marketplace.visualstudio.com/items?itemName=jeroen-meijer.pubspec-assist">Pubspec Assist</a></h2><p>Pubspec Assist 是一个 Visual Studio Code 扩展，它允许您轻松地添加对 <a href="https://dart.dev/">Dart</a> 和 <a href="https://flutter.dev/">Flutter</a> 项目的 <code>Pubspec.yaml</code> 的依赖项，而不需要离开编辑器。</p><p><img src="https://ducafecat.oss-cn-beijing.aliyuncs.com/podcast/74d2cd032dacd440cf86c6675ed6f7e750eb7220174f6a8d4aeeaf051921ad8e.gif" alt="img"></p><p><strong>注意</strong>: 在 Dart 版本 &gt; 2.5 中，这个功能是默认可用的！</p><h2 id="Material-Icon-Theme"><a href="#Material-Icon-Theme" class="headerlink" title="Material Icon Theme"></a><a href="https://marketplace.visualstudio.com/items?itemName=PKief.material-icon-theme">Material Icon Theme</a></h2><p><code>Material Icon Theme</code> 主题是一个 Visual Studio 代码扩展，允许你改变你的文件夹和文件图标，并使它们不枯燥！</p><p><img src="https://ducafecat.oss-cn-beijing.aliyuncs.com/podcast/09d55dcbcde4a58640416ff9e2e6bdd0d4cb0b175c0f92face872c61210d2906.png" alt="img"></p><h2 id="Dart-Data-Class-Generator-Dart"><a href="#Dart-Data-Class-Generator-Dart" class="headerlink" title="Dart Data Class Generator Dart"></a><a href="https://marketplace.visualstudio.com/items?itemName=BendixMa.dart-data-class-generator">Dart Data Class Generator Dart</a></h2><p>Dart 数据类生成器是一个 Visual Studio 代码扩展，它允许您轻松、快速地创建 Dart 数据类，而且不需要编写样板文件或运行代码生成。</p><p><img src="https://ducafecat.oss-cn-beijing.aliyuncs.com/podcast/bec00afb6634a4ad9bc5753a8b19dda206aa16bb9b79cdd1fd22bd0664589aa4.gif" alt="img"></p><h2 id="Todo-Tree"><a href="#Todo-Tree" class="headerlink" title="Todo Tree"></a><a href="https://marketplace.visualstudio.com/items?itemName=Gruntfuggly.todo-tree">Todo Tree</a></h2><p>Dart 数据类生成器是一个 Visual Studio 代码扩展，这个扩展可以快速搜索 <code>(using [ripgrep](https://github.com/BurntSushi/ripgrep))</code> 你的工作空间中的评论标签，比如 TODO 和 FIXME，并在浏览器面板的树视图中显示它们。单击树中的 TODO 将打开文件并将光标放在包含 TODO 的行上。</p><p>找到的 TODOs 也可以在打开的文件中突出显示。</p><p><img src="https://ducafecat.oss-cn-beijing.aliyuncs.com/podcast/50b8d2b07b6fa725e67e57a4d4f439d91222931c9836c4ae2ea257e49247108f.png" alt="img"></p><h2 id="Better-Comments"><a href="#Better-Comments" class="headerlink" title="Better Comments"></a><a href="https://marketplace.visualstudio.com/items?itemName=aaron-bond.better-comments">Better Comments</a></h2><p>Better Comments 是 visualstudiocode 扩展，该扩展将帮助您在代码中创建更加人性化的注释。有了这个扩展，你就可以把你的注释分类为:</p><ul><li>Alerts</li><li>Queries</li><li>TODOs</li><li>Highlights</li><li>注释掉的代码也可以进行样式设置，以清楚地表明代码不应该出现在那里</li><li>任何其他你想要的评论样式都可以在设置中指定</li></ul><p><img src="https://ducafecat.oss-cn-beijing.aliyuncs.com/podcast/bbe4504a84881813178738297dc64a95d67029eda9902280f9a5327d626b5dd9.png" alt="img"></p><h2 id="Remove-Comments"><a href="#Remove-Comments" class="headerlink" title="Remove Comments"></a><a href="https://marketplace.visualstudio.com/items?itemName=plibither8.remove-comments">Remove Comments</a></h2><p>删除注释是一个 visualstudio 代码扩展，这个扩展将帮助您立即从代码中删除所有注释！一次性整理和删除你的代码！</p><p><img src="https://ducafecat.oss-cn-beijing.aliyuncs.com/podcast/d23e92c8a4ad0085f9d3c77431a3d105759546bbd7e1fd8c06d5b0622bd4ea82.gif" alt="img"></p><h2 id="Image-Preview"><a href="#Image-Preview" class="headerlink" title="Image Preview"></a><a href="https://marketplace.visualstudio.com/items?itemName=kisstkondoros.vscode-gutter-preview">Image Preview</a></h2><p>Image Preview 是一个 Visual Studio Code 扩展，可以在 gutter 和 hover 中显示要预览的图像。</p><p><img src="https://ducafecat.oss-cn-beijing.aliyuncs.com/podcast/565f435b02da4cb969cedad2045afbcf62645d70a37af086a6343dfefd48cc0e.png" alt="img"></p><h2 id="State-Management-Snippets"><a href="#State-Management-Snippets" class="headerlink" title="State Management Snippets"></a>State Management Snippets</h2><p><a href="https://marketplace.visualstudio.com/items?itemName=get-snippets.get-snippets"><strong>GetX Snippets</strong></a></p><p>GetX Snippets 是一个 Visual Studio Code 扩展，用来加速 Flutter 开发应用程序的过程，目标是每个使用 <a href="https://pub.dev/packages/get">Get</a> 包的人。</p><p><img src="https://ducafecat.oss-cn-beijing.aliyuncs.com/podcast/47c0487960830aaa371f085271a48abbaa6630cb5a334295bafdd71931536676.jpg" alt="img"></p><p><a href="https://marketplace.visualstudio.com/items?itemName=FelixAngelov.bloc"><strong>Bloc</strong></a></p><p>Bloc 是一个 Visual Studio Code 扩展。这个软件包是为了方便实现 <code>BLoC</code> 设计模式(业务逻辑组件)与 Flutter 开发应用程序，目标是每个人使用 <a href="https://pub.dev/packages/flutter_bloc">bloc</a> 包。</p><p><img src="https://ducafecat.oss-cn-beijing.aliyuncs.com/podcast/6b976ab86a0c0d57682e629ff1a45e1319a6cc82c4be09c9449ec83164883c2b.gif" alt="img"></p><p><a href="https://marketplace.visualstudio.com/items?itemName=robert-brunhage.flutter-riverpod-snippets"><strong>Flutter Riverpod Snippets</strong></a></p><p>Flutter Riverpod Snippets 是一个 Visual Studio Code 扩展，它可以提高你使用 Riverpod 的方式。它包含不同代码段的集合，例如 provider。</p><p><img src="https://ducafecat.oss-cn-beijing.aliyuncs.com/podcast/8d96a50c8fd50f752d8fbbe107d04440164378a1fe283f71bec47ca2c2e8bd79.gif" alt="img"></p><p><a href="https://marketplace.visualstudio.com/items?itemName=Zaraclaj.flutter-provider-snippets"><strong>Provider</strong></a></p><p>Flutter Provider Snippets 是一个 Visual Studio Code 扩展，它允许收集使用提供程序时常用的 Flutter 类和方法。它可以加快你的发展速度。</p><p><img src="https://ducafecat.oss-cn-beijing.aliyuncs.com/podcast/ec60b335eaba673ba54e82f4f13205140ead67391074e97d99e0f6013f332816.gif" alt="img"></p><hr><h2 id="往期"><a href="#往期" class="headerlink" title="往期"></a>往期</h2><h3 id="开源"><a href="#开源" class="headerlink" title="开源"></a>开源</h3><h4 id="GetX-Quick-Start"><a href="#GetX-Quick-Start" class="headerlink" title="GetX Quick Start"></a>GetX Quick Start</h4><p><a href="https://github.com/ducafecat/getx_quick_start">https://github.com/ducafecat/getx_quick_start</a></p><h4 id="新闻客户端"><a href="#新闻客户端" class="headerlink" title="新闻客户端"></a>新闻客户端</h4><p><a href="https://github.com/ducafecat/flutter_learn_news">https://github.com/ducafecat/flutter_learn_news</a></p><h3 id="strapi-手册译文"><a href="#strapi-手册译文" class="headerlink" title="strapi 手册译文"></a>strapi 手册译文</h3><p><a href="https://getstrapi.cn/">https://getstrapi.cn</a></p><h3 id="微信讨论群-ducafecat"><a href="#微信讨论群-ducafecat" class="headerlink" title="微信讨论群 ducafecat"></a>微信讨论群 ducafecat</h3><h3 id="系列集合"><a href="#系列集合" class="headerlink" title="系列集合"></a>系列集合</h3><h4 id="译文"><a href="#译文" class="headerlink" title="译文"></a>译文</h4><p><a href="https://ducafecat.tech/categories/%E8%AF%91%E6%96%87/">https://ducafecat.tech/categories/%E8%AF%91%E6%96%87/</a></p><h4 id="开源项目"><a href="#开源项目" class="headerlink" title="开源项目"></a>开源项目</h4><p><a href="https://ducafecat.tech/categories/%E5%BC%80%E6%BA%90/">https://ducafecat.tech/categories/%E5%BC%80%E6%BA%90/</a></p><h4 id="Dart-编程语言基础"><a href="#Dart-编程语言基础" class="headerlink" title="Dart 编程语言基础"></a>Dart 编程语言基础</h4><p><a href="https://space.bilibili.com/404904528/channel/detail?cid=111585">https://space.bilibili.com/404904528/channel/detail?cid=111585</a></p><h4 id="Flutter-零基础入门"><a href="#Flutter-零基础入门" class="headerlink" title="Flutter 零基础入门"></a>Flutter 零基础入门</h4><p><a href="https://space.bilibili.com/404904528/channel/detail?cid=123470">https://space.bilibili.com/404904528/channel/detail?cid=123470</a></p><h4 id="Flutter-实战从零开始-新闻客户端"><a href="#Flutter-实战从零开始-新闻客户端" class="headerlink" title="Flutter 实战从零开始 新闻客户端"></a>Flutter 实战从零开始 新闻客户端</h4><p><a href="https://space.bilibili.com/404904528/channel/detail?cid=106755">https://space.bilibili.com/404904528/channel/detail?cid=106755</a></p><h4 id="Flutter-组件开发"><a href="#Flutter-组件开发" class="headerlink" title="Flutter 组件开发"></a>Flutter 组件开发</h4><p><a href="https://space.bilibili.com/404904528/channel/detail?cid=144262">https://space.bilibili.com/404904528/channel/detail?cid=144262</a></p><h4 id="Flutter-Bloc"><a href="#Flutter-Bloc" class="headerlink" title="Flutter Bloc"></a>Flutter Bloc</h4><p><a href="https://space.bilibili.com/404904528/channel/detail?cid=177519">https://space.bilibili.com/404904528/channel/detail?cid=177519</a></p><h4 id="Flutter-Getx4"><a href="#Flutter-Getx4" class="headerlink" title="Flutter Getx4"></a>Flutter Getx4</h4><p><a href="https://space.bilibili.com/404904528/channel/detail?cid=177514">https://space.bilibili.com/404904528/channel/detail?cid=177514</a></p><h4 id="Docker-Yapi"><a href="#Docker-Yapi" class="headerlink" title="Docker Yapi"></a>Docker Yapi</h4><p><a href="https://space.bilibili.com/404904528/channel/detail?cid=130578">https://space.bilibili.com/404904528/channel/detail?cid=130578</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Flutter Convex Bottom 底部导航</title>
      <link href="/2022/01/23/Flutter-Convex-Bottom-%E5%BA%95%E9%83%A8%E5%AF%BC%E8%88%AA/"/>
      <url>/2022/01/23/Flutter-Convex-Bottom-%E5%BA%95%E9%83%A8%E5%AF%BC%E8%88%AA/</url>
      
        <content type="html"><![CDATA[<p><img src="https://ducafecat.tech/2022/01/13/2022/convex-bottom-bar-in-flutter/2022-01-13-21-34-45.png" alt="img"></p><h2 id="原文"><a href="#原文" class="headerlink" title="原文"></a>原文</h2><blockquote><p><a href="https://medium.flutterdevs.com/convex-bottom-bar-in-flutter-7158fc642111">https://medium.flutterdevs.com/convex-bottom-bar-in-flutter-7158fc642111</a></p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><a href="https://github.com/flutter-devs/convex_bottom_bar_demo">https://github.com/flutter-devs/convex_bottom_bar_demo</a></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://pub.dev/packages/convex_bottom_bar">https://pub.dev/packages/convex_bottom_bar</a></li></ul><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p><img src="https://ducafecat.oss-cn-beijing.aliyuncs.com/podcast/9f3fbf1c9a26d4c2249bbd15d35a7f5f04e453bc04f0d295d3d40a8f8f199452.png" alt="img"></p><p><strong>convex Bottom</strong> 底部条是一个应用程序 sketch 图，它的形状是 convex Bottom 的。它可以使用户界面看起来很棒，也可以改进用户与界面的交互方式。在本文中，我们将建立一个简单的应用程序与最简单的形式之一，在 Flutter convex Bottom bar</p><h1 id="目录"><a href="#目录" class="headerlink" title="目录:"></a>目录:</h1><blockquote><p>引言</p><p>添加依赖性</p><p>如何使用</p><p>功能</p><p>属性</p><p>实施</p><p>总结</p><p>GitHub 链接</p></blockquote><h1 id="简介"><a href="#简介" class="headerlink" title="简介:"></a>简介:</h1><p>大家好，今天我们要讨论的是一个非常重要的关于 Flutter UI 的话题，这个话题就是底层导航栏。在本文中，我们了解了<strong>Convex Bottom Bar</strong>。<strong>Convex Bottom Bar</strong>是一种 Flutter 包装。Convex Bottom 的底部条是一个应用程序栏草图这样的方式，有一个 convex Bottom 状它。它可以使用户界面看起来很棒，也可以改进用户与界面的交互方式。在本文中，我们将构建一个简单的应用程序与最简单的形式之一的<strong>Convex Bottom Bar</strong>。</p><p>查看列表 TabItems 小部件，您可以解释在 appbar 中显示的图标和它们的标题。列表应该只包含奇数的 TabItems 来运行小部件，而不会引起谬误。如果要显示图像或图标，可以为每个 TabItem 小部件中的图标变量提供图像。如果你想生成一个图标底部 appbar，你可以使用 ConvexButton.fab 小部件。它生成的参数更少，并且有一个快速漂亮的单图标 appbar。</p><h1 id="添加依赖项"><a href="#添加依赖项" class="headerlink" title="添加依赖项:"></a>添加依赖项:</h1><p>在你的项目中去 pubspec。添加依赖项: 添加 <a href="https://pub.dev/packages/convex_bottom_bar">https://pub.dev/packages/convex_bottom_bar</a> 的最新版本。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">dependencies:</span></span><br><span class="line">  <span class="attr">flutter:</span></span><br><span class="line">    <span class="attr">sdk:</span> <span class="string">flutter</span></span><br><span class="line">  <span class="attr">cupertino_icons:</span> <span class="string">^1.0.2</span></span><br><span class="line">  <span class="attr">convex_bottom_bar:</span> <span class="string">^3.0.0</span></span><br></pre></td></tr></table></figure><p>我们使用 <code>convax_bottom_bar</code> 来创建一个更好的 bootobar UI。</p><h1 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用:"></a>如何使用:</h1><p>通常， <strong>ConvexAppBar</strong> 可以通过设置它的 bottomNavigationBar 来与脚手架一起工作。convexAppBar 有两个构造函数，convexAppBar ()将使用 levant 样式简化制表符的创建。将其添加到包的 pubspec.yaml 文件中，使用最新版本。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Scaffold(</span><br><span class="line">  body: bottomNavigationBar: ConvexAppBar();</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h1 id="特点"><a href="#特点" class="headerlink" title="特点:"></a>特点:</h1><ul><li>提供各种内部款式</li><li>可以更改 AppBar 的主题。</li><li>提供用于修改新样式的构建器 API。</li><li>在选项卡菜单中加入徽章。</li><li>优美的过渡动画</li><li>提供钩子 API 来覆盖一些内部样式。</li><li>RTL 补强</li></ul><h1 id="属性"><a href="#属性" class="headerlink" title="属性:"></a>属性:</h1><blockquote><p>下面是 <strong><em>Convex_Bottom_Bar</em></strong> 的一些性质:</p></blockquote><ul><li><strong>fixed</strong> (副标题图标停留在中心)</li><li><strong>fixedCircle</strong> (相同，但在固定图标的所有边上都有一个白色的圆圈)</li><li><strong>react</strong> (上标图标取代点击另一个图标)</li><li><strong>reactCircle</strong> (与上标图标中的白色圆圈相同)</li><li><strong>textIn</strong> (选定的离子出现相应的标题)</li><li><strong>titled</strong> (未选择的图标是显示其标题的单个图标)</li><li><strong>flip</strong> (点击图标显示一个 flip 动画)</li><li><strong>custom</strong> (使用 ConvexBottomAppBar 构建器自定义预定义的参数)</li><li><strong>height</strong> (grabbing the appbar)</li><li><strong>top</strong> (grabbing the superscripted icon)</li><li><strong>curveSize</strong> (拉伸上标图标的曲线)</li><li><strong>color</strong> (设置图标的颜色)</li><li><strong>backgroundColor</strong> (设置 appbar 背景颜色)</li><li><strong>gradient</strong> (使用渐变小部件设置 appbar 背景颜色)</li><li><strong>activeColor</strong> (设置圆形颜色)</li></ul><h1 id="实施方案"><a href="#实施方案" class="headerlink" title="实施方案:"></a>实施方案:</h1><p>在 <code>Convex_Bottom_Bar</code> 演示中，首先，我们在这个类中创建一个名为 MyHomePage ()的有状态类，我们创建一个值为 0 的变量 selectedpage 类型的 integer pass。定义一个名为 pageNo 的列表，在这个列表中我们传递要添加到 bootom 导航栏中的所有页面。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> selectedpage =<span class="number">0</span>;</span><br><span class="line"><span class="keyword">final</span> _pageNo = [Home() , Favorite() , CartPage() , ProfilePage()];</span><br></pre></td></tr></table></figure><p>在 BuildContext ()中，我们定义 Scaffold。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">appBar: AppBar(</span><br><span class="line">  centerTitle: <span class="keyword">true</span>,</span><br><span class="line">  title: Text(<span class="string">&#x27;Convex Bottom Bar&#x27;</span>),</span><br><span class="line">),</span><br></pre></td></tr></table></figure><p>首先在正文中传递 _pageno，其值为 selectedPage。使用 scaffold 属性，我们使用 bottomNavigationBar。在这里，我们创建 ConvexAppBar ()并传递 Items、 initialActiveIndex 和 onTap。在条目中，我们通过所有的屏幕，我们希望在我们的应用程序中显示。在 initialActiveIndexwe 中，我们传递已经定义的变量 selectedpage，在 onTap 中，我们传递 index 并在 setState 中定义 setState () ，我们传递 selectedpage 相当于 index。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">bottomNavigationBar: ConvexAppBar(</span><br><span class="line">  items: [</span><br><span class="line">    TabItem(icon: Icons._home_, title: <span class="string">&#x27;Home&#x27;</span>),</span><br><span class="line">    TabItem(icon: Icons._favorite_, title: <span class="string">&#x27;Favorite&#x27;</span>),</span><br><span class="line">    TabItem(icon: Icons._shopping_cart_, title: <span class="string">&#x27;Cart&#x27;</span>),</span><br><span class="line">    TabItem(icon: Icons._person_, title: <span class="string">&#x27;Profile&#x27;</span>),</span><br><span class="line">  ],</span><br><span class="line">  initialActiveIndex: selectedpage,</span><br><span class="line">  onTap: (<span class="built_in">int</span> index)&#123;</span><br><span class="line">      setState(() &#123;</span><br><span class="line">        selectedpage = index;</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">),</span><br></pre></td></tr></table></figure><p>如果我们创建不同的页面, Home(), Favorite(), CartPage(), ProfilePage(). 在 Home 类中，我们定义一个带有背景颜色的文本。</p><blockquote><p>Home 主屏幕:</p></blockquote><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:flutter/cupertino.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:flutter/material.dart&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Home</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span> </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> Home(&#123;Key? key&#125;) : <span class="keyword">super</span>(key: key);</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  _HomeState createState() =&gt; _HomeState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_HomeState</span> <span class="keyword">extends</span> <span class="title">State</span>&lt;<span class="title">Home</span>&gt; </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> Scaffold(</span><br><span class="line">      body: Center(</span><br><span class="line">        child: Text(<span class="string">&#x27;Home Page&#x27;</span>,</span><br><span class="line">          style: TextStyle(</span><br><span class="line">              fontSize: <span class="number">20</span>,</span><br><span class="line">              fontWeight: FontWeight.bold</span><br><span class="line">          ),),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Favorite 最喜欢的屏幕:</p></blockquote><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:flutter/cupertino.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:flutter/material.dart&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Favorite</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span> </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> Favorite(&#123;Key? key&#125;) : <span class="keyword">super</span>(key: key);</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  _FavoriteState createState() =&gt; _FavoriteState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_FavoriteState</span> <span class="keyword">extends</span> <span class="title">State</span>&lt;<span class="title">Favorite</span>&gt; </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> Scaffold(</span><br><span class="line">      backgroundColor: Colors._greenAccent_,</span><br><span class="line">     body: Center(</span><br><span class="line">          child: Text(<span class="string">&#x27;Favorite Page&#x27;</span>,</span><br><span class="line">          style: TextStyle(</span><br><span class="line">            fontSize: <span class="number">20</span>,</span><br><span class="line">            fontWeight: FontWeight._bold_ ),</span><br><span class="line">          )),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>CartPage 屏幕:</p></blockquote><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:flutter/cupertino.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:flutter/material.dart&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CartPage</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span> </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> CartPage(&#123;Key? key&#125;) : <span class="keyword">super</span>(key: key);</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  _CartPageState createState() =&gt; _CartPageState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_CartPageState</span> <span class="keyword">extends</span> <span class="title">State</span>&lt;<span class="title">CartPage</span>&gt; </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> Scaffold(</span><br><span class="line">      backgroundColor: Colors._pink_.shade100,</span><br><span class="line">      body: Center(</span><br><span class="line">          child: Text(<span class="string">&#x27;Cart Page&#x27;</span>,</span><br><span class="line">            style: TextStyle(</span><br><span class="line">                fontSize: <span class="number">20</span>,</span><br><span class="line">                fontWeight: FontWeight._bold_ ),)),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>_ProfilePage 个人资料页面:</p></blockquote><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:flutter/cupertino.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:flutter/material.dart&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ProfilePage</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span> </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> ProfilePage(&#123;Key? key&#125;) : <span class="keyword">super</span>(key: key);</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  _ProfilePageState createState() =&gt; _ProfilePageState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_ProfilePageState</span> <span class="keyword">extends</span> <span class="title">State</span>&lt;<span class="title">ProfilePage</span>&gt; </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> Scaffold(</span><br><span class="line">      backgroundColor: Colors._yellow_,</span><br><span class="line">      body: Center(</span><br><span class="line">          child: Text(<span class="string">&#x27;Profile Page&#x27;</span>,</span><br><span class="line">            style: TextStyle(</span><br><span class="line">                fontSize: <span class="number">20</span>,</span><br><span class="line">                fontWeight: FontWeight._bold_ ),)),</span><br><span class="line">    );  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当我们运行应用程序，我们应该得到屏幕的输出像下面的屏幕视频。</p><p><img src="https://ducafecat.oss-cn-beijing.aliyuncs.com/podcast/88693dbd56d2a370fbe1835330dd7d6233025431ddbaff7b17aca3470813c456.gif" alt="img"></p><h1 id="结语"><a href="#结语" class="headerlink" title="结语:"></a>结语:</h1><p>本文介绍了什么是<strong>Convex Bottom Bar</strong>以及如何在 Flutter 法中实现<strong>Convex Bottom Bar</strong>。你可以根据自己的需要使用这个包。</p><p>如果我做错了什么，请在评论中告诉我，我很乐意改进。</p><p>鼓掌如果这篇文章对你有帮助的话。</p><h1 id="GitHub-Link"><a href="#GitHub-Link" class="headerlink" title="GitHub Link:"></a>GitHub Link:</h1><p><a href="https://github.com/flutter-devs/convex_bottom_bar_demo">https://github.com/flutter-devs/convex_bottom_bar_demo</a></p>]]></content>
      
      
      <categories>
          
          <category> Flutter,前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flutter,底部导航 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly 安裝文檔(二) 主題頁面</title>
      <link href="/2022/01/21/Butterfly%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/"/>
      <url>/2022/01/21/Butterfly%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<div class="note blue icon flat"><i class="note-icon fas fa-bullhorn"></i><p>📖  本教程更新於 2022 年 01 月 16 日，教程的內容針對最新<strong>穩定版</strong>而更新（如果你是舊版，教程會有些出入，請留意）</p><p>🦋  Butterfly 已經更新到 <a href="https://github.com/jerryc127/hexo-theme-butterfly/releases/tag/4.0.1">4.0.1</a></p></div><div class="note green icon flat"><i class="note-icon fas fa-rocket"></i><p> 📚  文檔目錄</p><p><a href="#">Post not found: Butterfly-安裝文檔-一-快速開始 🚀 快速開始</a> - <a href="#">Post not found: Butterfly-安裝文檔-二-主題頁面 📑 主題頁面</a> - <a href="#">Post not found: Butterfly-安裝文檔-三-主題配置-1 🛠 主題配置-1</a> - <a href="#">Post not found: Butterfly-安裝文檔-四-主題配置-2 ⚔️ 主題配置-2</a> - <a href="#">Post not found: Butterfly-安裝文檔-五-主題問答 ❓ 主題問答</a> - <a href="#">Post not found: Butterfly-安裝文檔-六-進階教程 ⚡️ 進階教程</a> - <a href="#">Post not found: Butterfly-安裝文檔-七-更新日誌 ✨ 更新日誌</a> - <a href="#">Post not found: Butterfly-打賞 🤞 打賞</a></p></div><div class="note orange icon flat"><i class="note-icon fas fa-magic"></i><p>你可以通過右下角的 <strong>簡</strong> 按鈕切換為簡體顯示 </p></div><hr><h2 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a>Front-matter</h2><p><strong>Front-matter 是 markdown 文件最上方以 <code>---</code> 分隔的區域，用於指定個別檔案的變數。</strong></p><ul><li>Page Front-matter 用於<code>頁面</code>配置</li><li>Post Front-matter 用於<code>文章頁</code>配置</li></ul><div class="note info flat"><p>如果標注<code>可選</code>的參數，可根據自己需要添加，不用全部都寫在markdown裏</p></div><h3 id="Page-Front-matter"><a href="#Page-Front-matter" class="headerlink" title="Page Front-matter"></a>Page Front-matter</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">updated:</span><br><span class="line">type:</span><br><span class="line">comments:</span><br><span class="line">description:</span><br><span class="line">keywords:</span><br><span class="line">top<span class="emphasis">_img:</span></span><br><span class="line"><span class="emphasis">mathjax:</span></span><br><span class="line"><span class="emphasis">katex:</span></span><br><span class="line"><span class="emphasis">aside:</span></span><br><span class="line"><span class="emphasis">aplayer:</span></span><br><span class="line"><span class="emphasis">highlight_</span>shrink:</span><br><span class="line">---</span><br></pre></td></tr></table></figure><table><thead><tr><th>寫法</th><th>解釋</th></tr></thead><tbody><tr><td>title</td><td>【必需】頁面標題</td></tr><tr><td>date</td><td>【必需】頁面創建日期</td></tr><tr><td>type</td><td>【必需】標籤、分類和友情鏈接三個頁面需要配置</td></tr><tr><td>updated</td><td>【可選】頁面更新日期</td></tr><tr><td>description</td><td>【可選】頁面描述</td></tr><tr><td>keywords</td><td>【可選】頁面關鍵字</td></tr><tr><td>comments</td><td>【可選】顯示頁面評論模塊(默認 true)</td></tr><tr><td>top_img</td><td>【可選】頁面頂部圖片</td></tr><tr><td>mathjax</td><td>【可選】顯示mathjax(當設置mathjax的per_page: false時，才需要配置，默認 false)</td></tr><tr><td>katex</td><td>【可選】顯示katex(當設置katex的per_page: false時，才需要配置，默認 false)</td></tr><tr><td>aside</td><td>【可選】顯示側邊欄 (默認 true)</td></tr><tr><td>aplayer</td><td>【可選】在需要的頁面加載aplayer的js和css,請參考文章下面的<code>音樂</code> 配置</td></tr><tr><td>highlight_shrink</td><td>【可選】配置代碼框是否展開(true/false)(默認為設置中highlight_shrink的配置)</td></tr></tbody></table><h3 id="Post-Front-matter"><a href="#Post-Front-matter" class="headerlink" title="Post Front-matter"></a>Post Front-matter</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">updated:</span><br><span class="line">tags:</span><br><span class="line">categories:</span><br><span class="line">keywords:</span><br><span class="line">description:</span><br><span class="line">top<span class="emphasis">_img:</span></span><br><span class="line"><span class="emphasis">comments:</span></span><br><span class="line"><span class="emphasis">cover:</span></span><br><span class="line"><span class="emphasis">toc:</span></span><br><span class="line"><span class="emphasis">toc_</span>number:</span><br><span class="line">toc<span class="emphasis">_style_</span>simple:</span><br><span class="line">copyright:</span><br><span class="line">copyright<span class="emphasis">_author:</span></span><br><span class="line"><span class="emphasis">copyright_</span>author<span class="emphasis">_href:</span></span><br><span class="line"><span class="emphasis">copyright_</span>url:</span><br><span class="line">copyright<span class="emphasis">_info:</span></span><br><span class="line"><span class="emphasis">mathjax:</span></span><br><span class="line"><span class="emphasis">katex:</span></span><br><span class="line"><span class="emphasis">aplayer:</span></span><br><span class="line"><span class="emphasis">highlight_</span>shrink:</span><br><span class="line"><span class="section">aside:</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">寫法</th><th>解釋</th></tr></thead><tbody><tr><td align="left">title</td><td>【必需】文章標題</td></tr><tr><td align="left">date</td><td>【必需】文章創建日期</td></tr><tr><td align="left">updated</td><td>【可選】文章更新日期</td></tr><tr><td align="left">tags</td><td>【可選】文章標籤</td></tr><tr><td align="left">categories</td><td>【可選】文章分類</td></tr><tr><td align="left">keywords</td><td>【可選】文章關鍵字</td></tr><tr><td align="left">description</td><td>【可選】文章描述</td></tr><tr><td align="left">top_img</td><td>【可選】文章頂部圖片</td></tr><tr><td align="left">cover</td><td>【可選】文章縮略圖(如果沒有設置top_img,文章頁頂部將顯示縮略圖，可設為false/圖片地址/留空)</td></tr><tr><td align="left">comments</td><td>【可選】顯示文章評論模塊(默認 true)</td></tr><tr><td align="left">toc</td><td>【可選】顯示文章TOC(默認為設置中toc的enable配置)</td></tr><tr><td align="left">toc_number</td><td>【可選】顯示toc_number(默認為設置中toc的number配置)</td></tr><tr><td align="left">toc_style_simple</td><td>【可選】顯示 toc 簡潔模式</td></tr><tr><td align="left">copyright</td><td>【可選】顯示文章版權模塊(默認為設置中post_copyright的enable配置)</td></tr><tr><td align="left">copyright_author</td><td>【可選】文章版權模塊的<code>文章作者</code></td></tr><tr><td align="left">copyright_author_href</td><td>【可選】文章版權模塊的<code>文章作者</code>鏈接</td></tr><tr><td align="left">copyright_url</td><td>【可選】文章版權模塊的<code>文章連結</code>鏈接</td></tr><tr><td align="left">copyright_info</td><td>【可選】文章版權模塊的<code>版權聲明</code>文字</td></tr><tr><td align="left">mathjax</td><td>【可選】顯示mathjax(當設置mathjax的per_page: false時，才需要配置，默認 false)</td></tr><tr><td align="left">katex</td><td>【可選】顯示katex(當設置katex的per_page: false時，才需要配置，默認 false)</td></tr><tr><td align="left">aplayer</td><td>【可選】在需要的頁面加載aplayer的js和css,請參考文章下面的<code>音樂</code> 配置</td></tr><tr><td align="left">highlight_shrink</td><td>【可選】配置代碼框是否展開(true/false)(默認為設置中highlight_shrink的配置)</td></tr><tr><td align="left">aside</td><td>【可選】顯示側邊欄 (默認 true)</td></tr></tbody></table><h2 id="標籤頁"><a href="#標籤頁" class="headerlink" title="標籤頁"></a>標籤頁</h2><ol><li><p>前往你的 Hexo 博客的根目錄</p></li><li><p>輸入<code>hexo new page tags</code></p></li><li><p>你會找到<code>source/tags/index.md</code>這個文件</p></li><li><p>修改這個文件：</p><p><strong>記得添加 <code>type: &quot;tags&quot;</code></strong></p></li></ol><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 標籤</span><br><span class="line">date: 2018-01-05 00:00:00</span><br><span class="line"><span class="section">type: &quot;tags&quot;</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><h2 id="分類頁"><a href="#分類頁" class="headerlink" title="分類頁"></a>分類頁</h2><ol><li><p>前往你的 Hexo 博客的根目錄</p></li><li><p>輸入<code>hexo new page categories</code></p></li><li><p>你會找到<code>source/categories/index.md</code>這個文件</p></li><li><p>修改這個文件：</p><p><strong>記得添加 <code>type: &quot;categories&quot;</code></strong></p></li></ol><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 分類</span><br><span class="line">date: 2018-01-05 00:00:00</span><br><span class="line"><span class="section">type: &quot;categories&quot;</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><h2 id="友情鏈接"><a href="#友情鏈接" class="headerlink" title="友情鏈接"></a>友情鏈接</h2><p>為你的博客創建一個友情鏈接！</p><h3 id="創建友情鏈接頁面"><a href="#創建友情鏈接頁面" class="headerlink" title="創建友情鏈接頁面"></a>創建友情鏈接頁面</h3><ol><li><p>前往你的 Hexo 博客的根目錄</p></li><li><p>輸入 <code>hexo new page link</code></p></li><li><p>你會找到<code>source/link/index.md</code>這個文件</p></li><li><p>修改這個文件：</p><p>記得添加 <code>type: &quot;link&quot;</code></p></li></ol><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 友情鏈接</span><br><span class="line">date: 2018-06-07 22:17:49</span><br><span class="line"><span class="section">type: &quot;link&quot;</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><h3 id="友情鏈接添加"><a href="#友情鏈接添加" class="headerlink" title="友情鏈接添加"></a>友情鏈接添加</h3><div class="tabs" id="flink-add"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#flink-add-1">本地生成</button></li><li class="tab"><button type="button" data-href="#flink-add-2">遠程拉取</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="flink-add-1"><p>在Hexo博客目錄中的<code>source/_data</code>（如果沒有 _data 文件夾，請自行創建），創建一個文件<code>link.yml</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">class_name:</span> <span class="string">友情鏈接</span></span><br><span class="line">  <span class="attr">class_desc:</span> <span class="string">那些人，那些事</span></span><br><span class="line">  <span class="attr">link_list:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Hexo</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://hexo.io/zh-tw/</span></span><br><span class="line">      <span class="attr">avatar:</span> <span class="string">https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg</span></span><br><span class="line">      <span class="attr">descr:</span> <span class="string">快速、簡單且強大的網誌框架</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">class_name:</span> <span class="string">網站</span></span><br><span class="line">  <span class="attr">class_desc:</span> <span class="string">值得推薦的網站</span></span><br><span class="line">  <span class="attr">link_list:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Youtube</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://www.youtube.com/</span></span><br><span class="line">      <span class="attr">avatar:</span> <span class="string">https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png</span></span><br><span class="line">      <span class="attr">descr:</span> <span class="string">視頻網站</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Weibo</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://www.weibo.com/</span></span><br><span class="line">      <span class="attr">avatar:</span> <span class="string">https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png</span></span><br><span class="line">      <span class="attr">descr:</span> <span class="string">中國最大社交分享平臺</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Twitter</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://twitter.com/</span></span><br><span class="line">      <span class="attr">avatar:</span> <span class="string">https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png</span></span><br><span class="line">      <span class="attr">descr:</span> <span class="string">社交分享平臺</span></span><br></pre></td></tr></table></figure><p><code>class_name</code>  和 <code>class_desc</code> 支持 html 格式書寫，如不需要，也可以留空。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="flink-add-2"><p>從 <code>4.0.0</code> 開始，支持從遠程加載友情鏈接，遠程拉取只支持 <code>json</code>。</p><p>注意： 選擇遠程加載後，本地生成的方法會無效。</p><p>在  <code>source/link/index.md</code> 這個文件的 front-matter 添加遠程鏈接</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flink<span class="emphasis">_url: xxxxx</span></span><br></pre></td></tr></table></figure><p>Json 的格式</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;class_name&quot;</span>: <span class="string">&quot;友情鏈接&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;class_desc&quot;</span>: <span class="string">&quot;那些人，那些事&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;link_list&quot;</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;Hexo&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;link&quot;</span>: <span class="string">&quot;https://hexo.io/zh-tw/&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;avatar&quot;</span>: <span class="string">&quot;https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;descr&quot;</span>: <span class="string">&quot;快速、簡單且強大的網誌框架&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;class_name&quot;</span>: <span class="string">&quot;網站&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;class_desc&quot;</span>: <span class="string">&quot;值得推薦的網站&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;link_list&quot;</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;Youtube&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;link&quot;</span>: <span class="string">&quot;https://www.youtube.com/&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;avatar&quot;</span>: <span class="string">&quot;https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;descr&quot;</span>: <span class="string">&quot;視頻網站&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;Weibo&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;link&quot;</span>: <span class="string">&quot;https://www.weibo.com/&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;avatar&quot;</span>: <span class="string">&quot;https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;descr&quot;</span>: <span class="string">&quot;中國最大社交分享平臺&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;Twitter&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;link&quot;</span>: <span class="string">&quot;https://twitter.com/&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;avatar&quot;</span>: <span class="string">&quot;https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;descr&quot;</span>: <span class="string">&quot;社交分享平臺&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="友情鏈接界面設置"><a href="#友情鏈接界面設置" class="headerlink" title="友情鏈接界面設置"></a>友情鏈接界面設置</h3><p>由 2.2.0 起，友情鏈接界面可以由用戶自己自定義，只需要在友情鏈接的md檔設置就行，以普通的Markdown格式書寫。</p><h2 id="圖庫"><a href="#圖庫" class="headerlink" title="圖庫"></a>圖庫</h2><p>圖庫頁面只是普通的頁面，你只需要<code>hexo n page xxxxx</code> 創建你的頁面就行</p><p>然後使用標簽外掛 <a href="https://butterfly.js.org/posts/4aa8abbe/#Gallery%E7%9B%B8%E5%86%8A%E5%9C%96%E5%BA%AB">galleryGroup</a>，具體用法請查看對應的內容。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;div</span> <span class="string">class=&quot;gallery-group-main&quot;&gt;</span></span><br><span class="line">&#123;<span class="string">%</span> <span class="string">galleryGroup</span> <span class="string">&#x27;壁紙&#x27;</span> <span class="string">&#x27;收藏的一些壁紙&#x27;</span> <span class="string">&#x27;/Gallery/wallpaper&#x27;</span> <span class="string">https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png</span> <span class="string">%</span>&#125;</span><br><span class="line">&#123;<span class="string">%</span> <span class="string">galleryGroup</span> <span class="string">&#x27;漫威&#x27;</span> <span class="string">&#x27;關於漫威的圖片&#x27;</span> <span class="string">&#x27;/Gallery/marvel&#x27;</span> <span class="string">https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg</span> <span class="string">%</span>&#125;</span><br><span class="line">&#123;<span class="string">%</span> <span class="string">galleryGroup</span> <span class="string">&#x27;OH MY GIRL&#x27;</span> <span class="string">&#x27;關於OH MY GIRL的圖片&#x27;</span> <span class="string">&#x27;/Gallery/ohmygirl&#x27;</span> <span class="string">https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg</span> <span class="string">%</span>&#125;</span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br></pre></td></tr></table></figure><div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">壁紙</div>  <p>收藏的一些壁紙</p>  <a href='/Gallery/wallpaper'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">漫威</div>  <p>關於漫威的圖片</p>  <a href='/Gallery/marvel'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">OH MY GIRL</div>  <p>關於OH MY GIRL的圖片</p>  <a href='/Gallery/ohmygirl'></a>  </figcaption>  </figure>  </div><h3 id="子頁面"><a href="#子頁面" class="headerlink" title="子頁面"></a>子頁面</h3><p>子頁面也是普通的頁面，你只需要<code>hexo n page xxxxx</code> 創建你的頁面就行</p><p>然後使用標簽外掛 <a href="/posts/4aa8abbe/#Gallery%E7%9B%B8%E5%86%8A">gallery</a>，具體用法請查看對應的內容。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">%</span> <span class="string">gallery</span> <span class="string">%</span>&#125;</span><br><span class="line"><span class="type">![](https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg)</span></span><br><span class="line"><span class="type">![](https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg)</span></span><br><span class="line"><span class="type">![](https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg)</span></span><br><span class="line"><span class="type">![](https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg)</span></span><br><span class="line"><span class="type">![](https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg)</span></span><br><span class="line"><span class="type">![](https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg)</span></span><br><span class="line"><span class="type">![](https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg)</span></span><br><span class="line"><span class="type">![](https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg)</span></span><br><span class="line">&#123;<span class="string">%</span> <span class="string">endgallery</span> <span class="string">%</span>&#125;</span><br></pre></td></tr></table></figure><div class="fj-gallery"><p><img src="https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg"><br><img src="https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg"><br><img src="https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg"><br><img src="https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg"><br><img src="https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg"><br><img src="https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg"><br><img src="https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg"><br><img src="https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg"></p>          </div><div class="note pink icon flat"><i class="note-icon fas fa-sitemap"></i><p>如果你想要使用 <code>/photo/ohmygirl</code> 這樣的鏈接顯示你的圖片內容</p><p>你可以把創建好的 <code>ohmygirl</code>整個文件夾移到 <code>photo</code>文件夾裏去</p></div><h2 id="404頁面"><a href="#404頁面" class="headerlink" title="404頁面"></a>404頁面</h2><p>主題內置了一個簡單的404頁面，可在設置中開啟</p><div class="note info flat"><p>本地預覽時，訪問出錯的網站是不會跳到404頁面的。</p><p>如需本地預覽，請訪問<code>http://localhost:4000/404.html</code></p></div><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># A simple 404 page</span></span><br><span class="line"><span class="attr">error_404:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">subtitle:</span> <span class="string">&quot;頁面沒有找到&quot;</span></span><br><span class="line">  <span class="attr">background:</span> </span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-error404.png"></p><a class="btn-beautify block pink right larger" href="/posts/4aa8abbe/"   title="🛠 Butterfly 安裝文檔(三) 主題配置"><i class="far fa-hand-point-right"></i><span>🛠 Butterfly 安裝文檔(三) 主題配置</span></a>]]></content>
      
      
      <categories>
          
          <category> Docs文檔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Hexo </tag>
            
            <tag> 主題 </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何配置一个漂亮的Vim编辑器</title>
      <link href="/2022/01/21/%E5%A6%82%E4%BD%95%E9%85%8D%E7%BD%AE%E4%B8%80%E4%B8%AA%E6%BC%82%E4%BA%AE%E7%9A%84Vim%E7%BC%96%E8%BE%91%E5%99%A8/"/>
      <url>/2022/01/21/%E5%A6%82%E4%BD%95%E9%85%8D%E7%BD%AE%E4%B8%80%E4%B8%AA%E6%BC%82%E4%BA%AE%E7%9A%84Vim%E7%BC%96%E8%BE%91%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="如何配置一个漂亮的Vim编辑器"><a href="#如何配置一个漂亮的Vim编辑器" class="headerlink" title="如何配置一个漂亮的Vim编辑器"></a>如何配置一个漂亮的Vim编辑器</h1>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编辑器 Vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flutter后台运行代码</title>
      <link href="/2022/01/21/Flutter%E5%90%8E%E5%8F%B0%E8%BF%90%E8%A1%8C%E4%BB%A3%E7%A0%81/"/>
      <url>/2022/01/21/Flutter%E5%90%8E%E5%8F%B0%E8%BF%90%E8%A1%8C%E4%BB%A3%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h1 id="Flutter后台运行代码"><a href="#Flutter后台运行代码" class="headerlink" title="Flutter后台运行代码"></a>Flutter后台运行代码</h1><p><img src="http://r62hc9ndh.hb-bkt.clouddn.com/1.jpeg"></p><h2 id="原文"><a href="#原文" class="headerlink" title="原文"></a>原文</h2><blockquote><p><a href="https://www.dltlabs.com/blog/flutter-run-code-in-the-background-513940">https://www.dltlabs.com/blog/flutter-run-code-in-the-background-513940</a></p></blockquote><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://pub.dev/packages/background_fetch">https://pub.dev/packages/background_fetch</a></li></ul><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>今天，我将解释如何在 Flutter 创建一个后台任务。</p><p>在此之前，让我们理解什么是后台任务。后台任务是在后台运行的应用程序的辅助进程，即使应用程序没有运行或处于终止状态。</p><p>这一功能对于需要在后台执行任务而不需要用户打开应用程序的应用程序来说是有益的ーー例如，每 15 分钟调用 api 获取数据。</p><p>让我们在一个示例项目中实现一个后台任务，以便更好地理解这一操作的含义。</p><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤:"></a>步骤:</h3><ul><li>pubspec.yaml</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">flutter pub add background_fetch</span><br><span class="line">flutter pub get</span><br></pre></td></tr></table></figure><ul><li>在 main.dart 文件中导入后台包，并注册 HeadlessTask，以便在应用程序终止后接收 backgroundFetch 事件。</li></ul><p>例如:</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> backgroundFetchHeadlessTask(HeadlessTask task) <span class="keyword">async</span> &#123;<span class="keyword">var</span> taskId = task.taskId;</span><br><span class="line"><span class="keyword">if</span>(taskId == ‘your_task_id’) &#123;</span><br><span class="line"><span class="built_in">print</span>(‘your_task_id’);</span><br><span class="line"><span class="built_in">print</span>(‘[BackgroundFetch] Headless event received.’);</span><br><span class="line">_<span class="comment">//<span class="doctag">TODO:</span> perform tasks like — call api, DB and local notification etc…</span></span><br><span class="line">_&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> main() &#123;</span><br><span class="line">runApp(MyApp());</span><br><span class="line">_<span class="comment">//Registering backgroundFetch to receive events after app is terminated.</span></span><br><span class="line"><span class="comment">// Requires &#123;stopOnTerminate: false, enableHeadless: true&#125;</span></span><br><span class="line">_BackgroundFetch._registerHeadlessTask_(backgroundFetchHeadlessTask);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里我们必须传递一个顶级函数。让我们在 <code>registerHeadlessTask</code> 方法中给它命名为 <code>call back dispatcher</code>。然后我们定义需要在后台运行的任务:</p><h3 id="配置-BackgroundFetch"><a href="#配置-BackgroundFetch" class="headerlink" title="配置 BackgroundFetch"></a>配置 BackgroundFetch</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">Future&lt;<span class="keyword">void</span>&gt; initPlatformState() <span class="keyword">async</span> &#123;</span><br><span class="line">_<span class="comment">// Configure BackgroundFetch.</span></span><br><span class="line">_<span class="keyword">var</span> status = <span class="keyword">await</span> BackgroundFetch._configure_(BackgroundFetchConfig(</span><br><span class="line">minimumFetchInterval: <span class="number">15</span>,</span><br><span class="line">forceAlarmManager: <span class="keyword">false</span>,</span><br><span class="line">stopOnTerminate: <span class="keyword">false</span>,</span><br><span class="line">startOnBoot: <span class="keyword">true</span>,</span><br><span class="line">enableHeadless: <span class="keyword">true</span>,</span><br><span class="line">requiresBatteryNotLow: <span class="keyword">false</span>,</span><br><span class="line">requiresCharging: <span class="keyword">false</span>,</span><br><span class="line">requiresStorageNotLow: <span class="keyword">false</span>,</span><br><span class="line">requiresDeviceIdle: <span class="keyword">false</span>,</span><br><span class="line">requiredNetworkType: NetworkType.NONE,</span><br><span class="line">), _onBackgroundFetch, _onBackgroundFetchTimeout);</span><br><span class="line"><span class="built_in">print</span>(‘[BackgroundFetch] configure success: $status’);</span><br><span class="line">_<span class="comment">// Schedule backgroundfetch for the 1st time it will execute with 1000ms delay.</span></span><br><span class="line"><span class="comment">// where device must be powered (and delay will be throttled by the OS).</span></span><br><span class="line">_BackgroundFetch.scheduleTask(TaskConfig(</span><br><span class="line">taskId: “com.dltlabs.task”,</span><br><span class="line">delay: <span class="number">1000</span>,</span><br><span class="line">periodic: <span class="keyword">false</span>,</span><br><span class="line">stopOnTerminate: <span class="keyword">false</span>,</span><br><span class="line">enableHeadless: <span class="keyword">true</span></span><br><span class="line">));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用 <code>initState</code> 中的 <code>initPlatformState</code> 方法并设置 <code>BackgroundFetchConfig</code> 类的配置。换句话说，在传递其他参数的同时，提供注册一次性任务或周期性任务的选项。</p><p>在这里，如果存在多个任务，任务 id 可以帮助我们轻松地识别单个任务。输入数据可以是处理任务所需的任何信息。</p><p>如果我们希望在应用程序处于终止状态时继续工作，请将 <code>stopOnTerminate</code> 参数的值设置为 <code>false</code> 。如果 <code>stopOnTerminate</code> 设置为 <code>true</code> ，后台服务将在应用程序终止时终止。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> _onBackgroundFetchTimeout(<span class="built_in">String</span> taskId) &#123;</span><br><span class="line"><span class="built_in">print</span>(“[BackgroundFetch] TIMEOUT: $taskId”);</span><br><span class="line">BackgroundFetch.finish(taskId);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当操作系统没有执行后台任务或者任务无法在给定时间内运行时，将调用 <code>onBackgroundFetchTimeout</code> 方法。在这种方法中，我们可以用任务 Id 来处理任务。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> _onBackgroundFetch(<span class="built_in">String</span> taskId) <span class="keyword">async</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(taskId == ‘your_task_id’) &#123;</span><br><span class="line"><span class="built_in">print</span>(‘[BackgroundFetch] Event received’);</span><br><span class="line"><span class="comment">//<span class="doctag">TODO:</span> perform your task like : call the API’s, call the DB and local notification.</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当后台服务执行事件时，将调用 <code>onBackgroundFetch</code> 方法。在这个方法中，我们将接收任务 id 作为一个参数，它可以用来处理任务。在需要调用 api 将数据保存到数据库或显示本地通知等情况下，这一点非常重要。</p><p>默认情况下，调用任务之后的时间间隔的频率为 15 分钟。如果你想把它设置成其他的东西，你也可以在这里做。在 Android 上，后台进程的最小时间间隔为 15 分钟。如果该值小于 15，Android 默认使用 15 分钟。</p><p>Also, we must also remember to make changes inside the info.plist and manifest.xml file for both iOS &amp; Android. We need to set some of the permissions, and we also need to copy and paste other settings. If you need these settings, you can get them at the following links: <a href="https://github.com/transistorsoft/flutter_background_fetch/blob/master/help/INSTALL-ANDROID.md">Android</a> <a href="https://github.com/transistorsoft/flutter_background_fetch/blob/master/help/INSTALL-IOS.md">, OS</a>.</p><p>此外，我们还必须记住对 Android IOS 的 <code>info.plist</code> 和 <code>manifest.xml</code> 文件进行更改。我们需要设置一些权限，还需要复制和粘贴其他设置。如果你需要这些设置，你可以通过以下链接获得: <a href="https://github.com/transistorsoft/flutter_background_fetch/blob/master/help/INSTALL-IOS.md">IOS</a> , <a href="https://github.com/transistorsoft/flutter_background_fetch/blob/master/help/INSTALL-ANDROID.md">Android</a>。</p><p>谢谢你的阅读！</p>]]></content>
      
      
      
        <tags>
            
            <tag> flutter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何创建Flutter动画屏幕</title>
      <link href="/2022/01/21/Flutter%E5%88%9B%E5%BB%BA%E5%8A%A8%E7%94%BB%E5%B1%8F%E5%B9%95/"/>
      <url>/2022/01/21/Flutter%E5%88%9B%E5%BB%BA%E5%8A%A8%E7%94%BB%E5%B1%8F%E5%B9%95/</url>
      
        <content type="html"><![CDATA[<p><img src="https://ducafecat.tech/2022/01/21/2022/create-an-animation-screen-in-flutter/2022-01-20-07-40-53.png" alt="img"></p><h2 id="原文"><a href="#原文" class="headerlink" title="原文"></a>原文</h2><blockquote><p><a href="https://medium.com/@baran.aslankan4/create-an-animation-screen-in-flutter-683d9a534d67">https://medium.com/@baran.aslankan4/create-an-animation-screen-in-flutter-683d9a534d67</a></p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><a href="https://github.com/ducafecat/getx_quick_start">https://github.com/ducafecat/getx_quick_start</a></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://pub.flutter-io.cn/packages/animated_text_kit">https://pub.flutter-io.cn/packages/animated_text_kit</a></li><li><a href="https://pub.flutter-io.cn/packages/simple_animations">https://pub.flutter-io.cn/packages/simple_animations</a></li><li><a href="https://pub.flutter-io.cn/packages/google_fonts">https://pub.flutter-io.cn/packages/google_fonts</a></li></ul><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>大家好，今天我要向大家展示如何在 Flutter 中创建一个动画屏幕，就像这样;</p><h3 id="安装依赖项"><a href="#安装依赖项" class="headerlink" title="安装依赖项"></a>安装依赖项</h3><p>您可以从 <a href="http://pub.dev/">pub.dev</a> 获得依赖项</p><p>这些是我在我的项目中使用的版本:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">animated_text_kit: ^4.2.1</span><br><span class="line">simple_animations: ^3.1.1</span><br><span class="line">google_fonts: ^2.1.0</span><br></pre></td></tr></table></figure><p>在获得依赖关系之后，我们在编码之前还有一个步骤。</p><p>有一个叫做 Liquid Studio 的应用程序是由 Felix Blaschke 创建的，这个应用程序生成飞镖代码来制作一些动画。</p><p><a href="https://felixblaschke.github.io/liquid-studio/#/">https://felixblaschke.github.io/liquid-studio/#/</a></p><h3 id="现在是设计部分"><a href="#现在是设计部分" class="headerlink" title="现在是设计部分:"></a>现在是设计部分:</h3><p><img src="https://ducafecat.oss-cn-beijing.aliyuncs.com/podcast/5be7678fba1af2347fb75002f1218ad03d750dcf73b3920be7b9c8037cbd88f3.png" alt="img"></p><p>有许多选项和颜色选择，为此我使用了默认设置和颜色。</p><p>现在，为了使它动画化，我们需要添加另一个层称为 Plasma。</p><p><img src="https://ducafecat.oss-cn-beijing.aliyuncs.com/podcast/8b9650e51a2158a46df6b8e5446636e6a318c16d561c1565e3f77a97961eb195.png" alt="img"></p><p>点击添加图层按钮并选择 Plasma。</p><p><img src="https://ducafecat.oss-cn-beijing.aliyuncs.com/podcast/f557b6269ac54cb256f322e18fb20b10751e6ada7419f4c4f06e1a8196a55219.png" alt="img"></p><p>现在你可以自定义渐变层和 plasma layers，我为自己做了一些定制。</p><p>现在要导出，点击左上角的导出按钮。</p><p><img src="https://ducafecat.oss-cn-beijing.aliyuncs.com/podcast/4c5e476cc5f53fdc7280dd538fc7abfa8b4c62350e8e5745515092b32d34c52b.png" alt="img"></p><p>单击导出场景以导出所有图层。</p><p><img src="https://ducafecat.oss-cn-beijing.aliyuncs.com/podcast/ddf8e9fce504d7bb16759ddb8df364ba60359d2e7283a5434376b6ef2631f0ce.png" alt="img"></p><p>现在我们有了彩色动画的代码，我们将在 IDE 中使用这段代码，但在此之前，让我们先创建类结构。</p><p>让我们创建一个有状态的小部件并首先返回一个 Scaffold。</p><p>现在，我们希望跳过动画页当我们点击屏幕，要做到这一点，我们可以使用 GestureDetector 小部件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@override</span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    return Scaffold(</span><br><span class="line">      body: GestureDetector(</span><br><span class="line"></span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>现在粘贴我们在 liquid studio 中导出的代码，作为 GestureDetector 小部件的子部件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">@override</span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    return Scaffold(</span><br><span class="line">      body: GestureDetector(</span><br><span class="line">        child: Container(</span><br><span class="line">          decoration: BoxDecoration(</span><br><span class="line">            gradient: LinearGradient(</span><br><span class="line">              tileMode: TileMode.mirror,</span><br><span class="line">              begin: Alignment.topRight,</span><br><span class="line">              end: Alignment.bottomRight,</span><br><span class="line">              colors: [</span><br><span class="line">                Color(0xfff44336),</span><br><span class="line">                Color(0xff2196f3),</span><br><span class="line">              ],</span><br><span class="line">              stops: [</span><br><span class="line">                0,</span><br><span class="line">                1,</span><br><span class="line">              ],</span><br><span class="line">            ),</span><br><span class="line">            backgroundBlendMode: BlendMode.srcOver,</span><br><span class="line">          ),</span><br><span class="line">         PlasmaRenderer(</span><br><span class="line">              type: PlasmaType.infinity,</span><br><span class="line">              particles: 10,</span><br><span class="line">              color: Color(0x442eaeaa),</span><br><span class="line">              blur: 0.31,</span><br><span class="line">              size: 1,</span><br><span class="line">              speed: 1.86,</span><br><span class="line">              offset: 0,</span><br><span class="line">              blendMode: BlendMode.plus,</span><br><span class="line">              particleType: ParticleType.atlas,</span><br><span class="line">              variation1: 0,</span><br><span class="line">              variation2: 0,</span><br><span class="line">              variation3: 0,</span><br><span class="line">              rotation: 0,</span><br><span class="line">            ),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>它应该看起来像这样，现在你会有一个错误，这是因为我们还没有导入简单的动画。</p><p>导入类顶部的简单动画库。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import &#x27;package:simple_animations/simple_animations.dart&#x27;;</span><br></pre></td></tr></table></figure><p>现在我们的动画颜色已经准备好了，可以点击导航另一个页面，我们将使用 GestureDetector 小部件的点击方法。</p><p>在 Container Widget 下，create on tap method 并导航到所需的页面。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">onTap: ()&#123;</span><br><span class="line">          Navigator.of(context).pushReplacementNamed(&#x27;/home&#x27;);</span><br><span class="line">        &#125;,</span><br></pre></td></tr></table></figure><p>现在，当我们测试代码时，应该是这样的:</p><p>现在只剩下一件事情要做，那就是动画文字部分。</p><p>在这段代码中，Container 小部件有一个子元素，那就是 plasma 渲染器，plasma 渲染器可以帮助我们创建颜色动画。现在，为了向屏幕添加文本，我们需要向 Container Widget 添加另一个子元素。要添加子元素，我们需要使用 Stack Widget 覆盖所有子元素。</p><p>点击 PlasmaRenderer Widget，然后点击点击 Widget 后出现的灯泡。</p><p>选择 wrap with Column 选项。</p><p><img src="https://ducafecat.oss-cn-beijing.aliyuncs.com/podcast/21e150d28b37fbc38aec62ee85779ee42bd16aa9a6eb1b6c8eb41e1b8439ed6d.png" alt="img"></p><p>现在我们必须在这里停下来！</p><p>让我告诉你为什么我选择用列选择，它也可以是行。</p><p>我们将使用 Stack Widget，这个 Widget 可以帮助我们把 Widget 放在彼此之上，基本上就是叠加 Widget。</p><p>但是我为什么要选择专栏呢？</p><p>因为堆栈，列和行窗口小部件没有子窗口，他们有子窗口，如果我选择窗口小部件而不是列，那么我将不得不创建括号和改变子窗口小部件，所以我选择列的原因基本上是为了更快地编码。这一点都不重要，但我只是想提一下</p><p>所以我们已经创建了我们的堆栈小部件，其中一个子部件是 PlasmaRenderer，现在我们要添加动画文本作为子部件，但在创建中心小部件之前，让我们在屏幕中央显示文本。</p><p>为了获得动画文本，我们需要使用 AnimatedTextKit 小部件，因此我们必须导入库。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import &#x27;package:animated_text_kit/animated_text_kit.dart&#x27;;Center(</span><br><span class="line">          child: AnimatedTextKit( ),</span><br><span class="line">              ),</span><br></pre></td></tr></table></figure><p>在 PlasmaRenderer 之后添加此代码。</p><p>获得了一个名为 animatedTexts 的列表，这个列表将包含我们想要在屏幕上显示的所有文本。</p><p>在 pub.dev 中，AnimatedTextKit 包中有许多文本动画，我选择了旋转文本，但是您可以尝试不同的动画。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">animatedTexts: [</span><br><span class="line">                    RotateAnimatedText(&#x27;Hello&#x27;,textStyle: const TextStyle(fontSize: 32,fontWeight: FontWeight.bold,color: Colors.white)),</span><br><span class="line">                    RotateAnimatedText(&#x27;Animation screen&#x27;,textStyle: const TextStyle(fontSize: 32,fontWeight: FontWeight.bold,color: Colors.white)),</span><br><span class="line">                    RotateAnimatedText(&#x27;Click to get started&#x27;,textStyle: const TextStyle(fontSize: 32,fontWeight: FontWeight.bold,color: Colors.white)),</span><br><span class="line">                  ],</span><br></pre></td></tr></table></figure><p>在这里 RotateAnimatedText 采用我们的字符串，你可以添加样式来改变字体大小和粗体，此外你还可以导入谷歌字体和添加一些自定义字体。对于颜色部分，我选择了白色，你可以选择任何你想要的颜色。</p><p>现在文本已经完成，但是我们需要一些动画时间的定制。</p><p>我们可以使用一些方法来帮助我们定制我们的动画。</p><ul><li>totalRepeatCount: 您可以编写希望动画重复的次数</li><li>pause: 动画文本之间的暂停时间</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">totalRepeatCount: 1,</span><br><span class="line">pause: const Duration(milliseconds: 3000),</span><br></pre></td></tr></table></figure><p>将这些内容写入 AnimatedTextKit 小部件。</p><p>我希望它只执行一次，所以我设置重复计数 1。</p><p>Pause 采用 Duration 方法，我将其设置为 3000 毫秒，也就是 3 秒。</p><p>整个代码应该是这样的:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">@override</span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    return Scaffold(</span><br><span class="line">      body: GestureDetector(</span><br><span class="line">        child: Container(</span><br><span class="line">          decoration: BoxDecoration(</span><br><span class="line">            gradient: LinearGradient(</span><br><span class="line">              tileMode: TileMode.mirror,</span><br><span class="line">              begin: Alignment.topLeft,</span><br><span class="line">              end: Alignment.bottomRight,</span><br><span class="line">              colors: [</span><br><span class="line">                Color(0xffff1100),</span><br><span class="line">                Color(0xff008eff),</span><br><span class="line">              ],</span><br><span class="line">              stops: [</span><br><span class="line">                0,</span><br><span class="line">                1,</span><br><span class="line">              ],</span><br><span class="line">            ),</span><br><span class="line">            backgroundBlendMode: BlendMode.srcOver,</span><br><span class="line">          ),</span><br><span class="line">          child: Stack(</span><br><span class="line">            children:[</span><br><span class="line">               PlasmaRenderer(</span><br><span class="line">              type: PlasmaType.infinity,</span><br><span class="line">              particles: 10,</span><br><span class="line">              color: Color(0x442eaeaa),</span><br><span class="line">              blur: 0.31,</span><br><span class="line">              size: 1,</span><br><span class="line">              speed: 1.86,</span><br><span class="line">              offset: 0,</span><br><span class="line">              blendMode: BlendMode.plus,</span><br><span class="line">              particleType: ParticleType.atlas,</span><br><span class="line">              variation1: 0,</span><br><span class="line">              variation2: 0,</span><br><span class="line">              variation3: 0,</span><br><span class="line">              rotation: 0,</span><br><span class="line">            ),</span><br><span class="line">              Center(</span><br><span class="line">                child: AnimatedTextKit(</span><br><span class="line">                  animatedTexts: [</span><br><span class="line">                    RotateAnimatedText(&#x27;Hello&#x27;,textStyle: const TextStyle(fontSize: 32,fontWeight: FontWeight.bold,color: Colors.white)),</span><br><span class="line">                    RotateAnimatedText(&#x27;Animation screen&#x27;,textStyle: const TextStyle(fontSize: 32,fontWeight: FontWeight.bold,color: Colors.white)),</span><br><span class="line">                    RotateAnimatedText(&#x27;Click to get started&#x27;,textStyle: const TextStyle(fontSize: 32,fontWeight: FontWeight.bold,color: Colors.white)),</span><br><span class="line">                  ],</span><br><span class="line">                      totalRepeatCount: 1,</span><br><span class="line">                      pause: const Duration(milliseconds: 3000),</span><br><span class="line">                ),</span><br><span class="line">              ),],</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">          onTap: ()&#123;</span><br><span class="line">            Navigator.of(context).pushReplacementNamed(&#x27;/home&#x27;); &#125;</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>您可以自定义您的动画和使用更多的方法或更多的动画文本根据您的口味。</p><p>这就是我今天的全部内容，谢谢阅读，希望你喜欢，下次写作时再见，祝你有个愉快的一天;</p>]]></content>
      
      
      
        <tags>
            
            <tag> 动画 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/01/20/hello-world/"/>
      <url>/2022/01/20/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
